/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package line.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2017-04-08")
public class BuddyService {

  public interface Iface {

    public List<BuddySearchResult> findBuddyContactsByQuery(String language, String country, String query, int fromIndex, int count, BuddySearchRequestSource requestSource) throws TalkException, org.apache.thrift.TException;

    public List<Contact> getBuddyContacts(String language, String country, String classification, int fromIndex, int count) throws TalkException, org.apache.thrift.TException;

    public BuddyDetail getBuddyDetail(String buddyMid) throws TalkException, org.apache.thrift.TException;

    public BuddyOnAir getBuddyOnAir(String buddyMid) throws TalkException, org.apache.thrift.TException;

    public List<String> getCountriesHavingBuddy() throws TalkException, org.apache.thrift.TException;

    public Map<String,Long> getNewlyReleasedBuddyIds(String country) throws TalkException, org.apache.thrift.TException;

    public BuddyBanner getPopularBuddyBanner(String language, String country, ApplicationType applicationType, String resourceSpecification) throws TalkException, org.apache.thrift.TException;

    public List<BuddyList> getPopularBuddyLists(String language, String country) throws TalkException, org.apache.thrift.TException;

    public List<Contact> getPromotedBuddyContacts(String language, String country) throws TalkException, org.apache.thrift.TException;

  }

  public interface AsyncIface {

    public void findBuddyContactsByQuery(String language, String country, String query, int fromIndex, int count, BuddySearchRequestSource requestSource, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getBuddyContacts(String language, String country, String classification, int fromIndex, int count, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getBuddyDetail(String buddyMid, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getBuddyOnAir(String buddyMid, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getCountriesHavingBuddy(org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getNewlyReleasedBuddyIds(String country, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getPopularBuddyBanner(String language, String country, ApplicationType applicationType, String resourceSpecification, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getPopularBuddyLists(String language, String country, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void getPromotedBuddyContacts(String language, String country, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends org.apache.thrift.TServiceClient implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public List<BuddySearchResult> findBuddyContactsByQuery(String language, String country, String query, int fromIndex, int count, BuddySearchRequestSource requestSource) throws TalkException, org.apache.thrift.TException
    {
      sendFindBuddyContactsByQuery(language, country, query, fromIndex, count, requestSource);
      return recvFindBuddyContactsByQuery();
    }

    public void sendFindBuddyContactsByQuery(String language, String country, String query, int fromIndex, int count, BuddySearchRequestSource requestSource) throws org.apache.thrift.TException
    {
      findBuddyContactsByQuery_args args = new findBuddyContactsByQuery_args();
      args.setLanguage(language);
      args.setCountry(country);
      args.setQuery(query);
      args.setFromIndex(fromIndex);
      args.setCount(count);
      args.setRequestSource(requestSource);
      sendBase("findBuddyContactsByQuery", args);
    }

    public List<BuddySearchResult> recvFindBuddyContactsByQuery() throws TalkException, org.apache.thrift.TException
    {
      findBuddyContactsByQuery_result result = new findBuddyContactsByQuery_result();
      receiveBase(result, "findBuddyContactsByQuery");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "findBuddyContactsByQuery failed: unknown result");
    }

    public List<Contact> getBuddyContacts(String language, String country, String classification, int fromIndex, int count) throws TalkException, org.apache.thrift.TException
    {
      sendGetBuddyContacts(language, country, classification, fromIndex, count);
      return recvGetBuddyContacts();
    }

    public void sendGetBuddyContacts(String language, String country, String classification, int fromIndex, int count) throws org.apache.thrift.TException
    {
      getBuddyContacts_args args = new getBuddyContacts_args();
      args.setLanguage(language);
      args.setCountry(country);
      args.setClassification(classification);
      args.setFromIndex(fromIndex);
      args.setCount(count);
      sendBase("getBuddyContacts", args);
    }

    public List<Contact> recvGetBuddyContacts() throws TalkException, org.apache.thrift.TException
    {
      getBuddyContacts_result result = new getBuddyContacts_result();
      receiveBase(result, "getBuddyContacts");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getBuddyContacts failed: unknown result");
    }

    public BuddyDetail getBuddyDetail(String buddyMid) throws TalkException, org.apache.thrift.TException
    {
      sendGetBuddyDetail(buddyMid);
      return recvGetBuddyDetail();
    }

    public void sendGetBuddyDetail(String buddyMid) throws org.apache.thrift.TException
    {
      getBuddyDetail_args args = new getBuddyDetail_args();
      args.setBuddyMid(buddyMid);
      sendBase("getBuddyDetail", args);
    }

    public BuddyDetail recvGetBuddyDetail() throws TalkException, org.apache.thrift.TException
    {
      getBuddyDetail_result result = new getBuddyDetail_result();
      receiveBase(result, "getBuddyDetail");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getBuddyDetail failed: unknown result");
    }

    public BuddyOnAir getBuddyOnAir(String buddyMid) throws TalkException, org.apache.thrift.TException
    {
      sendGetBuddyOnAir(buddyMid);
      return recvGetBuddyOnAir();
    }

    public void sendGetBuddyOnAir(String buddyMid) throws org.apache.thrift.TException
    {
      getBuddyOnAir_args args = new getBuddyOnAir_args();
      args.setBuddyMid(buddyMid);
      sendBase("getBuddyOnAir", args);
    }

    public BuddyOnAir recvGetBuddyOnAir() throws TalkException, org.apache.thrift.TException
    {
      getBuddyOnAir_result result = new getBuddyOnAir_result();
      receiveBase(result, "getBuddyOnAir");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getBuddyOnAir failed: unknown result");
    }

    public List<String> getCountriesHavingBuddy() throws TalkException, org.apache.thrift.TException
    {
      sendGetCountriesHavingBuddy();
      return recvGetCountriesHavingBuddy();
    }

    public void sendGetCountriesHavingBuddy() throws org.apache.thrift.TException
    {
      getCountriesHavingBuddy_args args = new getCountriesHavingBuddy_args();
      sendBase("getCountriesHavingBuddy", args);
    }

    public List<String> recvGetCountriesHavingBuddy() throws TalkException, org.apache.thrift.TException
    {
      getCountriesHavingBuddy_result result = new getCountriesHavingBuddy_result();
      receiveBase(result, "getCountriesHavingBuddy");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getCountriesHavingBuddy failed: unknown result");
    }

    public Map<String,Long> getNewlyReleasedBuddyIds(String country) throws TalkException, org.apache.thrift.TException
    {
      sendGetNewlyReleasedBuddyIds(country);
      return recvGetNewlyReleasedBuddyIds();
    }

    public void sendGetNewlyReleasedBuddyIds(String country) throws org.apache.thrift.TException
    {
      getNewlyReleasedBuddyIds_args args = new getNewlyReleasedBuddyIds_args();
      args.setCountry(country);
      sendBase("getNewlyReleasedBuddyIds", args);
    }

    public Map<String,Long> recvGetNewlyReleasedBuddyIds() throws TalkException, org.apache.thrift.TException
    {
      getNewlyReleasedBuddyIds_result result = new getNewlyReleasedBuddyIds_result();
      receiveBase(result, "getNewlyReleasedBuddyIds");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getNewlyReleasedBuddyIds failed: unknown result");
    }

    public BuddyBanner getPopularBuddyBanner(String language, String country, ApplicationType applicationType, String resourceSpecification) throws TalkException, org.apache.thrift.TException
    {
      sendGetPopularBuddyBanner(language, country, applicationType, resourceSpecification);
      return recvGetPopularBuddyBanner();
    }

    public void sendGetPopularBuddyBanner(String language, String country, ApplicationType applicationType, String resourceSpecification) throws org.apache.thrift.TException
    {
      getPopularBuddyBanner_args args = new getPopularBuddyBanner_args();
      args.setLanguage(language);
      args.setCountry(country);
      args.setApplicationType(applicationType);
      args.setResourceSpecification(resourceSpecification);
      sendBase("getPopularBuddyBanner", args);
    }

    public BuddyBanner recvGetPopularBuddyBanner() throws TalkException, org.apache.thrift.TException
    {
      getPopularBuddyBanner_result result = new getPopularBuddyBanner_result();
      receiveBase(result, "getPopularBuddyBanner");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getPopularBuddyBanner failed: unknown result");
    }

    public List<BuddyList> getPopularBuddyLists(String language, String country) throws TalkException, org.apache.thrift.TException
    {
      sendGetPopularBuddyLists(language, country);
      return recvGetPopularBuddyLists();
    }

    public void sendGetPopularBuddyLists(String language, String country) throws org.apache.thrift.TException
    {
      getPopularBuddyLists_args args = new getPopularBuddyLists_args();
      args.setLanguage(language);
      args.setCountry(country);
      sendBase("getPopularBuddyLists", args);
    }

    public List<BuddyList> recvGetPopularBuddyLists() throws TalkException, org.apache.thrift.TException
    {
      getPopularBuddyLists_result result = new getPopularBuddyLists_result();
      receiveBase(result, "getPopularBuddyLists");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getPopularBuddyLists failed: unknown result");
    }

    public List<Contact> getPromotedBuddyContacts(String language, String country) throws TalkException, org.apache.thrift.TException
    {
      sendGetPromotedBuddyContacts(language, country);
      return recvGetPromotedBuddyContacts();
    }

    public void sendGetPromotedBuddyContacts(String language, String country) throws org.apache.thrift.TException
    {
      getPromotedBuddyContacts_args args = new getPromotedBuddyContacts_args();
      args.setLanguage(language);
      args.setCountry(country);
      sendBase("getPromotedBuddyContacts", args);
    }

    public List<Contact> recvGetPromotedBuddyContacts() throws TalkException, org.apache.thrift.TException
    {
      getPromotedBuddyContacts_result result = new getPromotedBuddyContacts_result();
      receiveBase(result, "getPromotedBuddyContacts");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getPromotedBuddyContacts failed: unknown result");
    }

  }
  public static class AsyncClient extends org.apache.thrift.async.TAsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void findBuddyContactsByQuery(String language, String country, String query, int fromIndex, int count, BuddySearchRequestSource requestSource, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      findBuddyContactsByQuery_call method_call = new findBuddyContactsByQuery_call(language, country, query, fromIndex, count, requestSource, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class findBuddyContactsByQuery_call extends org.apache.thrift.async.TAsyncMethodCall {
      private String language;
      private String country;
      private String query;
      private int fromIndex;
      private int count;
      private BuddySearchRequestSource requestSource;
      public findBuddyContactsByQuery_call(String language, String country, String query, int fromIndex, int count, BuddySearchRequestSource requestSource, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.language = language;
        this.country = country;
        this.query = query;
        this.fromIndex = fromIndex;
        this.count = count;
        this.requestSource = requestSource;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("findBuddyContactsByQuery", org.apache.thrift.protocol.TMessageType.CALL, 0));
        findBuddyContactsByQuery_args args = new findBuddyContactsByQuery_args();
        args.setLanguage(language);
        args.setCountry(country);
        args.setQuery(query);
        args.setFromIndex(fromIndex);
        args.setCount(count);
        args.setRequestSource(requestSource);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public List<BuddySearchResult> getResult() throws TalkException, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recvFindBuddyContactsByQuery();
      }
    }

    public void getBuddyContacts(String language, String country, String classification, int fromIndex, int count, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getBuddyContacts_call method_call = new getBuddyContacts_call(language, country, classification, fromIndex, count, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getBuddyContacts_call extends org.apache.thrift.async.TAsyncMethodCall {
      private String language;
      private String country;
      private String classification;
      private int fromIndex;
      private int count;
      public getBuddyContacts_call(String language, String country, String classification, int fromIndex, int count, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.language = language;
        this.country = country;
        this.classification = classification;
        this.fromIndex = fromIndex;
        this.count = count;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getBuddyContacts", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getBuddyContacts_args args = new getBuddyContacts_args();
        args.setLanguage(language);
        args.setCountry(country);
        args.setClassification(classification);
        args.setFromIndex(fromIndex);
        args.setCount(count);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public List<Contact> getResult() throws TalkException, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recvGetBuddyContacts();
      }
    }

    public void getBuddyDetail(String buddyMid, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getBuddyDetail_call method_call = new getBuddyDetail_call(buddyMid, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getBuddyDetail_call extends org.apache.thrift.async.TAsyncMethodCall {
      private String buddyMid;
      public getBuddyDetail_call(String buddyMid, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.buddyMid = buddyMid;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getBuddyDetail", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getBuddyDetail_args args = new getBuddyDetail_args();
        args.setBuddyMid(buddyMid);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public BuddyDetail getResult() throws TalkException, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recvGetBuddyDetail();
      }
    }

    public void getBuddyOnAir(String buddyMid, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getBuddyOnAir_call method_call = new getBuddyOnAir_call(buddyMid, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getBuddyOnAir_call extends org.apache.thrift.async.TAsyncMethodCall {
      private String buddyMid;
      public getBuddyOnAir_call(String buddyMid, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.buddyMid = buddyMid;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getBuddyOnAir", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getBuddyOnAir_args args = new getBuddyOnAir_args();
        args.setBuddyMid(buddyMid);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public BuddyOnAir getResult() throws TalkException, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recvGetBuddyOnAir();
      }
    }

    public void getCountriesHavingBuddy(org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getCountriesHavingBuddy_call method_call = new getCountriesHavingBuddy_call(resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getCountriesHavingBuddy_call extends org.apache.thrift.async.TAsyncMethodCall {
      public getCountriesHavingBuddy_call(org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getCountriesHavingBuddy", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getCountriesHavingBuddy_args args = new getCountriesHavingBuddy_args();
        args.write(prot);
        prot.writeMessageEnd();
      }

      public List<String> getResult() throws TalkException, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recvGetCountriesHavingBuddy();
      }
    }

    public void getNewlyReleasedBuddyIds(String country, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getNewlyReleasedBuddyIds_call method_call = new getNewlyReleasedBuddyIds_call(country, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getNewlyReleasedBuddyIds_call extends org.apache.thrift.async.TAsyncMethodCall {
      private String country;
      public getNewlyReleasedBuddyIds_call(String country, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.country = country;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getNewlyReleasedBuddyIds", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getNewlyReleasedBuddyIds_args args = new getNewlyReleasedBuddyIds_args();
        args.setCountry(country);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Map<String,Long> getResult() throws TalkException, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recvGetNewlyReleasedBuddyIds();
      }
    }

    public void getPopularBuddyBanner(String language, String country, ApplicationType applicationType, String resourceSpecification, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getPopularBuddyBanner_call method_call = new getPopularBuddyBanner_call(language, country, applicationType, resourceSpecification, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getPopularBuddyBanner_call extends org.apache.thrift.async.TAsyncMethodCall {
      private String language;
      private String country;
      private ApplicationType applicationType;
      private String resourceSpecification;
      public getPopularBuddyBanner_call(String language, String country, ApplicationType applicationType, String resourceSpecification, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.language = language;
        this.country = country;
        this.applicationType = applicationType;
        this.resourceSpecification = resourceSpecification;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getPopularBuddyBanner", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getPopularBuddyBanner_args args = new getPopularBuddyBanner_args();
        args.setLanguage(language);
        args.setCountry(country);
        args.setApplicationType(applicationType);
        args.setResourceSpecification(resourceSpecification);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public BuddyBanner getResult() throws TalkException, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recvGetPopularBuddyBanner();
      }
    }

    public void getPopularBuddyLists(String language, String country, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getPopularBuddyLists_call method_call = new getPopularBuddyLists_call(language, country, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getPopularBuddyLists_call extends org.apache.thrift.async.TAsyncMethodCall {
      private String language;
      private String country;
      public getPopularBuddyLists_call(String language, String country, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.language = language;
        this.country = country;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getPopularBuddyLists", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getPopularBuddyLists_args args = new getPopularBuddyLists_args();
        args.setLanguage(language);
        args.setCountry(country);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public List<BuddyList> getResult() throws TalkException, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recvGetPopularBuddyLists();
      }
    }

    public void getPromotedBuddyContacts(String language, String country, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getPromotedBuddyContacts_call method_call = new getPromotedBuddyContacts_call(language, country, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getPromotedBuddyContacts_call extends org.apache.thrift.async.TAsyncMethodCall {
      private String language;
      private String country;
      public getPromotedBuddyContacts_call(String language, String country, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.language = language;
        this.country = country;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getPromotedBuddyContacts", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getPromotedBuddyContacts_args args = new getPromotedBuddyContacts_args();
        args.setLanguage(language);
        args.setCountry(country);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public List<Contact> getResult() throws TalkException, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recvGetPromotedBuddyContacts();
      }
    }

  }

  public static class Processor<I extends Iface> extends org.apache.thrift.TBaseProcessor<I> implements org.apache.thrift.TProcessor {
    private static final Logger LOGGER = LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> getProcessMap(Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("findBuddyContactsByQuery", new findBuddyContactsByQuery());
      processMap.put("getBuddyContacts", new getBuddyContacts());
      processMap.put("getBuddyDetail", new getBuddyDetail());
      processMap.put("getBuddyOnAir", new getBuddyOnAir());
      processMap.put("getCountriesHavingBuddy", new getCountriesHavingBuddy());
      processMap.put("getNewlyReleasedBuddyIds", new getNewlyReleasedBuddyIds());
      processMap.put("getPopularBuddyBanner", new getPopularBuddyBanner());
      processMap.put("getPopularBuddyLists", new getPopularBuddyLists());
      processMap.put("getPromotedBuddyContacts", new getPromotedBuddyContacts());
      return processMap;
    }

    public static class findBuddyContactsByQuery<I extends Iface> extends org.apache.thrift.ProcessFunction<I, findBuddyContactsByQuery_args> {
      public findBuddyContactsByQuery() {
        super("findBuddyContactsByQuery");
      }

      public findBuddyContactsByQuery_args getEmptyArgsInstance() {
        return new findBuddyContactsByQuery_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public findBuddyContactsByQuery_result getResult(I iface, findBuddyContactsByQuery_args args) throws org.apache.thrift.TException {
        findBuddyContactsByQuery_result result = new findBuddyContactsByQuery_result();
        try {
          result.success = iface.findBuddyContactsByQuery(args.language, args.country, args.query, args.fromIndex, args.count, args.requestSource);
        } catch (TalkException e) {
          result.e = e;
        }
        return result;
      }
    }

    public static class getBuddyContacts<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getBuddyContacts_args> {
      public getBuddyContacts() {
        super("getBuddyContacts");
      }

      public getBuddyContacts_args getEmptyArgsInstance() {
        return new getBuddyContacts_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getBuddyContacts_result getResult(I iface, getBuddyContacts_args args) throws org.apache.thrift.TException {
        getBuddyContacts_result result = new getBuddyContacts_result();
        try {
          result.success = iface.getBuddyContacts(args.language, args.country, args.classification, args.fromIndex, args.count);
        } catch (TalkException e) {
          result.e = e;
        }
        return result;
      }
    }

    public static class getBuddyDetail<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getBuddyDetail_args> {
      public getBuddyDetail() {
        super("getBuddyDetail");
      }

      public getBuddyDetail_args getEmptyArgsInstance() {
        return new getBuddyDetail_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getBuddyDetail_result getResult(I iface, getBuddyDetail_args args) throws org.apache.thrift.TException {
        getBuddyDetail_result result = new getBuddyDetail_result();
        try {
          result.success = iface.getBuddyDetail(args.buddyMid);
        } catch (TalkException e) {
          result.e = e;
        }
        return result;
      }
    }

    public static class getBuddyOnAir<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getBuddyOnAir_args> {
      public getBuddyOnAir() {
        super("getBuddyOnAir");
      }

      public getBuddyOnAir_args getEmptyArgsInstance() {
        return new getBuddyOnAir_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getBuddyOnAir_result getResult(I iface, getBuddyOnAir_args args) throws org.apache.thrift.TException {
        getBuddyOnAir_result result = new getBuddyOnAir_result();
        try {
          result.success = iface.getBuddyOnAir(args.buddyMid);
        } catch (TalkException e) {
          result.e = e;
        }
        return result;
      }
    }

    public static class getCountriesHavingBuddy<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getCountriesHavingBuddy_args> {
      public getCountriesHavingBuddy() {
        super("getCountriesHavingBuddy");
      }

      public getCountriesHavingBuddy_args getEmptyArgsInstance() {
        return new getCountriesHavingBuddy_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getCountriesHavingBuddy_result getResult(I iface, getCountriesHavingBuddy_args args) throws org.apache.thrift.TException {
        getCountriesHavingBuddy_result result = new getCountriesHavingBuddy_result();
        try {
          result.success = iface.getCountriesHavingBuddy();
        } catch (TalkException e) {
          result.e = e;
        }
        return result;
      }
    }

    public static class getNewlyReleasedBuddyIds<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getNewlyReleasedBuddyIds_args> {
      public getNewlyReleasedBuddyIds() {
        super("getNewlyReleasedBuddyIds");
      }

      public getNewlyReleasedBuddyIds_args getEmptyArgsInstance() {
        return new getNewlyReleasedBuddyIds_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getNewlyReleasedBuddyIds_result getResult(I iface, getNewlyReleasedBuddyIds_args args) throws org.apache.thrift.TException {
        getNewlyReleasedBuddyIds_result result = new getNewlyReleasedBuddyIds_result();
        try {
          result.success = iface.getNewlyReleasedBuddyIds(args.country);
        } catch (TalkException e) {
          result.e = e;
        }
        return result;
      }
    }

    public static class getPopularBuddyBanner<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getPopularBuddyBanner_args> {
      public getPopularBuddyBanner() {
        super("getPopularBuddyBanner");
      }

      public getPopularBuddyBanner_args getEmptyArgsInstance() {
        return new getPopularBuddyBanner_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getPopularBuddyBanner_result getResult(I iface, getPopularBuddyBanner_args args) throws org.apache.thrift.TException {
        getPopularBuddyBanner_result result = new getPopularBuddyBanner_result();
        try {
          result.success = iface.getPopularBuddyBanner(args.language, args.country, args.applicationType, args.resourceSpecification);
        } catch (TalkException e) {
          result.e = e;
        }
        return result;
      }
    }

    public static class getPopularBuddyLists<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getPopularBuddyLists_args> {
      public getPopularBuddyLists() {
        super("getPopularBuddyLists");
      }

      public getPopularBuddyLists_args getEmptyArgsInstance() {
        return new getPopularBuddyLists_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getPopularBuddyLists_result getResult(I iface, getPopularBuddyLists_args args) throws org.apache.thrift.TException {
        getPopularBuddyLists_result result = new getPopularBuddyLists_result();
        try {
          result.success = iface.getPopularBuddyLists(args.language, args.country);
        } catch (TalkException e) {
          result.e = e;
        }
        return result;
      }
    }

    public static class getPromotedBuddyContacts<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getPromotedBuddyContacts_args> {
      public getPromotedBuddyContacts() {
        super("getPromotedBuddyContacts");
      }

      public getPromotedBuddyContacts_args getEmptyArgsInstance() {
        return new getPromotedBuddyContacts_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getPromotedBuddyContacts_result getResult(I iface, getPromotedBuddyContacts_args args) throws org.apache.thrift.TException {
        getPromotedBuddyContacts_result result = new getPromotedBuddyContacts_result();
        try {
          result.success = iface.getPromotedBuddyContacts(args.language, args.country);
        } catch (TalkException e) {
          result.e = e;
        }
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends org.apache.thrift.TBaseAsyncProcessor<I> {
    private static final Logger LOGGER = LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("findBuddyContactsByQuery", new findBuddyContactsByQuery());
      processMap.put("getBuddyContacts", new getBuddyContacts());
      processMap.put("getBuddyDetail", new getBuddyDetail());
      processMap.put("getBuddyOnAir", new getBuddyOnAir());
      processMap.put("getCountriesHavingBuddy", new getCountriesHavingBuddy());
      processMap.put("getNewlyReleasedBuddyIds", new getNewlyReleasedBuddyIds());
      processMap.put("getPopularBuddyBanner", new getPopularBuddyBanner());
      processMap.put("getPopularBuddyLists", new getPopularBuddyLists());
      processMap.put("getPromotedBuddyContacts", new getPromotedBuddyContacts());
      return processMap;
    }

    public static class findBuddyContactsByQuery<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, findBuddyContactsByQuery_args, List<BuddySearchResult>> {
      public findBuddyContactsByQuery() {
        super("findBuddyContactsByQuery");
      }

      public findBuddyContactsByQuery_args getEmptyArgsInstance() {
        return new findBuddyContactsByQuery_args();
      }

      public AsyncMethodCallback<List<BuddySearchResult>> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<List<BuddySearchResult>>() { 
          public void onComplete(List<BuddySearchResult> o) {
            findBuddyContactsByQuery_result result = new findBuddyContactsByQuery_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            findBuddyContactsByQuery_result result = new findBuddyContactsByQuery_result();
            if (e instanceof TalkException) {
                        result.e = (TalkException) e;
                        result.setEIsSet(true);
                        msg = result;
            }
             else 
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, findBuddyContactsByQuery_args args, org.apache.thrift.async.AsyncMethodCallback<List<BuddySearchResult>> resultHandler) throws TException {
        iface.findBuddyContactsByQuery(args.language, args.country, args.query, args.fromIndex, args.count, args.requestSource,resultHandler);
      }
    }

    public static class getBuddyContacts<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getBuddyContacts_args, List<Contact>> {
      public getBuddyContacts() {
        super("getBuddyContacts");
      }

      public getBuddyContacts_args getEmptyArgsInstance() {
        return new getBuddyContacts_args();
      }

      public AsyncMethodCallback<List<Contact>> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<List<Contact>>() { 
          public void onComplete(List<Contact> o) {
            getBuddyContacts_result result = new getBuddyContacts_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getBuddyContacts_result result = new getBuddyContacts_result();
            if (e instanceof TalkException) {
                        result.e = (TalkException) e;
                        result.setEIsSet(true);
                        msg = result;
            }
             else 
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getBuddyContacts_args args, org.apache.thrift.async.AsyncMethodCallback<List<Contact>> resultHandler) throws TException {
        iface.getBuddyContacts(args.language, args.country, args.classification, args.fromIndex, args.count,resultHandler);
      }
    }

    public static class getBuddyDetail<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getBuddyDetail_args, BuddyDetail> {
      public getBuddyDetail() {
        super("getBuddyDetail");
      }

      public getBuddyDetail_args getEmptyArgsInstance() {
        return new getBuddyDetail_args();
      }

      public AsyncMethodCallback<BuddyDetail> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<BuddyDetail>() { 
          public void onComplete(BuddyDetail o) {
            getBuddyDetail_result result = new getBuddyDetail_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getBuddyDetail_result result = new getBuddyDetail_result();
            if (e instanceof TalkException) {
                        result.e = (TalkException) e;
                        result.setEIsSet(true);
                        msg = result;
            }
             else 
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getBuddyDetail_args args, org.apache.thrift.async.AsyncMethodCallback<BuddyDetail> resultHandler) throws TException {
        iface.getBuddyDetail(args.buddyMid,resultHandler);
      }
    }

    public static class getBuddyOnAir<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getBuddyOnAir_args, BuddyOnAir> {
      public getBuddyOnAir() {
        super("getBuddyOnAir");
      }

      public getBuddyOnAir_args getEmptyArgsInstance() {
        return new getBuddyOnAir_args();
      }

      public AsyncMethodCallback<BuddyOnAir> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<BuddyOnAir>() { 
          public void onComplete(BuddyOnAir o) {
            getBuddyOnAir_result result = new getBuddyOnAir_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getBuddyOnAir_result result = new getBuddyOnAir_result();
            if (e instanceof TalkException) {
                        result.e = (TalkException) e;
                        result.setEIsSet(true);
                        msg = result;
            }
             else 
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getBuddyOnAir_args args, org.apache.thrift.async.AsyncMethodCallback<BuddyOnAir> resultHandler) throws TException {
        iface.getBuddyOnAir(args.buddyMid,resultHandler);
      }
    }

    public static class getCountriesHavingBuddy<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getCountriesHavingBuddy_args, List<String>> {
      public getCountriesHavingBuddy() {
        super("getCountriesHavingBuddy");
      }

      public getCountriesHavingBuddy_args getEmptyArgsInstance() {
        return new getCountriesHavingBuddy_args();
      }

      public AsyncMethodCallback<List<String>> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<List<String>>() { 
          public void onComplete(List<String> o) {
            getCountriesHavingBuddy_result result = new getCountriesHavingBuddy_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getCountriesHavingBuddy_result result = new getCountriesHavingBuddy_result();
            if (e instanceof TalkException) {
                        result.e = (TalkException) e;
                        result.setEIsSet(true);
                        msg = result;
            }
             else 
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getCountriesHavingBuddy_args args, org.apache.thrift.async.AsyncMethodCallback<List<String>> resultHandler) throws TException {
        iface.getCountriesHavingBuddy(resultHandler);
      }
    }

    public static class getNewlyReleasedBuddyIds<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getNewlyReleasedBuddyIds_args, Map<String,Long>> {
      public getNewlyReleasedBuddyIds() {
        super("getNewlyReleasedBuddyIds");
      }

      public getNewlyReleasedBuddyIds_args getEmptyArgsInstance() {
        return new getNewlyReleasedBuddyIds_args();
      }

      public AsyncMethodCallback<Map<String,Long>> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<Map<String,Long>>() { 
          public void onComplete(Map<String,Long> o) {
            getNewlyReleasedBuddyIds_result result = new getNewlyReleasedBuddyIds_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getNewlyReleasedBuddyIds_result result = new getNewlyReleasedBuddyIds_result();
            if (e instanceof TalkException) {
                        result.e = (TalkException) e;
                        result.setEIsSet(true);
                        msg = result;
            }
             else 
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getNewlyReleasedBuddyIds_args args, org.apache.thrift.async.AsyncMethodCallback<Map<String,Long>> resultHandler) throws TException {
        iface.getNewlyReleasedBuddyIds(args.country,resultHandler);
      }
    }

    public static class getPopularBuddyBanner<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getPopularBuddyBanner_args, BuddyBanner> {
      public getPopularBuddyBanner() {
        super("getPopularBuddyBanner");
      }

      public getPopularBuddyBanner_args getEmptyArgsInstance() {
        return new getPopularBuddyBanner_args();
      }

      public AsyncMethodCallback<BuddyBanner> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<BuddyBanner>() { 
          public void onComplete(BuddyBanner o) {
            getPopularBuddyBanner_result result = new getPopularBuddyBanner_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getPopularBuddyBanner_result result = new getPopularBuddyBanner_result();
            if (e instanceof TalkException) {
                        result.e = (TalkException) e;
                        result.setEIsSet(true);
                        msg = result;
            }
             else 
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getPopularBuddyBanner_args args, org.apache.thrift.async.AsyncMethodCallback<BuddyBanner> resultHandler) throws TException {
        iface.getPopularBuddyBanner(args.language, args.country, args.applicationType, args.resourceSpecification,resultHandler);
      }
    }

    public static class getPopularBuddyLists<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getPopularBuddyLists_args, List<BuddyList>> {
      public getPopularBuddyLists() {
        super("getPopularBuddyLists");
      }

      public getPopularBuddyLists_args getEmptyArgsInstance() {
        return new getPopularBuddyLists_args();
      }

      public AsyncMethodCallback<List<BuddyList>> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<List<BuddyList>>() { 
          public void onComplete(List<BuddyList> o) {
            getPopularBuddyLists_result result = new getPopularBuddyLists_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getPopularBuddyLists_result result = new getPopularBuddyLists_result();
            if (e instanceof TalkException) {
                        result.e = (TalkException) e;
                        result.setEIsSet(true);
                        msg = result;
            }
             else 
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getPopularBuddyLists_args args, org.apache.thrift.async.AsyncMethodCallback<List<BuddyList>> resultHandler) throws TException {
        iface.getPopularBuddyLists(args.language, args.country,resultHandler);
      }
    }

    public static class getPromotedBuddyContacts<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getPromotedBuddyContacts_args, List<Contact>> {
      public getPromotedBuddyContacts() {
        super("getPromotedBuddyContacts");
      }

      public getPromotedBuddyContacts_args getEmptyArgsInstance() {
        return new getPromotedBuddyContacts_args();
      }

      public AsyncMethodCallback<List<Contact>> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<List<Contact>>() { 
          public void onComplete(List<Contact> o) {
            getPromotedBuddyContacts_result result = new getPromotedBuddyContacts_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            getPromotedBuddyContacts_result result = new getPromotedBuddyContacts_result();
            if (e instanceof TalkException) {
                        result.e = (TalkException) e;
                        result.setEIsSet(true);
                        msg = result;
            }
             else 
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getPromotedBuddyContacts_args args, org.apache.thrift.async.AsyncMethodCallback<List<Contact>> resultHandler) throws TException {
        iface.getPromotedBuddyContacts(args.language, args.country,resultHandler);
      }
    }

  }

  public static class findBuddyContactsByQuery_args implements org.apache.thrift.TBase<findBuddyContactsByQuery_args, findBuddyContactsByQuery_args._Fields>, java.io.Serializable, Cloneable, Comparable<findBuddyContactsByQuery_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findBuddyContactsByQuery_args");

    private static final org.apache.thrift.protocol.TField LANGUAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("language", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField COUNTRY_FIELD_DESC = new org.apache.thrift.protocol.TField("country", org.apache.thrift.protocol.TType.STRING, (short)3);
    private static final org.apache.thrift.protocol.TField QUERY_FIELD_DESC = new org.apache.thrift.protocol.TField("query", org.apache.thrift.protocol.TType.STRING, (short)4);
    private static final org.apache.thrift.protocol.TField FROM_INDEX_FIELD_DESC = new org.apache.thrift.protocol.TField("fromIndex", org.apache.thrift.protocol.TType.I32, (short)5);
    private static final org.apache.thrift.protocol.TField COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("count", org.apache.thrift.protocol.TType.I32, (short)6);
    private static final org.apache.thrift.protocol.TField REQUEST_SOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("requestSource", org.apache.thrift.protocol.TType.I32, (short)7);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findBuddyContactsByQuery_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findBuddyContactsByQuery_argsTupleSchemeFactory());
    }

    private String language; // required
    private String country; // required
    private String query; // required
    private int fromIndex; // required
    private int count; // required
    private BuddySearchRequestSource requestSource; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      LANGUAGE((short)2, "language"),
      COUNTRY((short)3, "country"),
      QUERY((short)4, "query"),
      FROM_INDEX((short)5, "fromIndex"),
      COUNT((short)6, "count"),
      /**
       * 
       * @see BuddySearchRequestSource
       */
      REQUEST_SOURCE((short)7, "requestSource");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 2: // LANGUAGE
            return LANGUAGE;
          case 3: // COUNTRY
            return COUNTRY;
          case 4: // QUERY
            return QUERY;
          case 5: // FROM_INDEX
            return FROM_INDEX;
          case 6: // COUNT
            return COUNT;
          case 7: // REQUEST_SOURCE
            return REQUEST_SOURCE;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __FROMINDEX_ISSET_ID = 0;
    private static final int __COUNT_ISSET_ID = 1;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.LANGUAGE, new org.apache.thrift.meta_data.FieldMetaData("language", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.COUNTRY, new org.apache.thrift.meta_data.FieldMetaData("country", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.QUERY, new org.apache.thrift.meta_data.FieldMetaData("query", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.FROM_INDEX, new org.apache.thrift.meta_data.FieldMetaData("fromIndex", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.COUNT, new org.apache.thrift.meta_data.FieldMetaData("count", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.REQUEST_SOURCE, new org.apache.thrift.meta_data.FieldMetaData("requestSource", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, BuddySearchRequestSource.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findBuddyContactsByQuery_args.class, metaDataMap);
    }

    public findBuddyContactsByQuery_args() {
    }

    public findBuddyContactsByQuery_args(
      String language,
      String country,
      String query,
      int fromIndex,
      int count,
      BuddySearchRequestSource requestSource)
    {
      this();
      this.language = language;
      this.country = country;
      this.query = query;
      this.fromIndex = fromIndex;
      setFromIndexIsSet(true);
      this.count = count;
      setCountIsSet(true);
      this.requestSource = requestSource;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findBuddyContactsByQuery_args(findBuddyContactsByQuery_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetLanguage()) {
        this.language = other.language;
      }
      if (other.isSetCountry()) {
        this.country = other.country;
      }
      if (other.isSetQuery()) {
        this.query = other.query;
      }
      this.fromIndex = other.fromIndex;
      this.count = other.count;
      if (other.isSetRequestSource()) {
        this.requestSource = other.requestSource;
      }
    }

    public findBuddyContactsByQuery_args deepCopy() {
      return new findBuddyContactsByQuery_args(this);
    }

    @Override
    public void clear() {
      this.language = null;
      this.country = null;
      this.query = null;
      setFromIndexIsSet(false);
      this.fromIndex = 0;
      setCountIsSet(false);
      this.count = 0;
      this.requestSource = null;
    }

    public String getLanguage() {
      return this.language;
    }

    public void setLanguage(String language) {
      this.language = language;
    }

    public void unsetLanguage() {
      this.language = null;
    }

    /** Returns true if field language is set (has been assigned a value) and false otherwise */
    public boolean isSetLanguage() {
      return this.language != null;
    }

    public void setLanguageIsSet(boolean value) {
      if (!value) {
        this.language = null;
      }
    }

    public String getCountry() {
      return this.country;
    }

    public void setCountry(String country) {
      this.country = country;
    }

    public void unsetCountry() {
      this.country = null;
    }

    /** Returns true if field country is set (has been assigned a value) and false otherwise */
    public boolean isSetCountry() {
      return this.country != null;
    }

    public void setCountryIsSet(boolean value) {
      if (!value) {
        this.country = null;
      }
    }

    public String getQuery() {
      return this.query;
    }

    public void setQuery(String query) {
      this.query = query;
    }

    public void unsetQuery() {
      this.query = null;
    }

    /** Returns true if field query is set (has been assigned a value) and false otherwise */
    public boolean isSetQuery() {
      return this.query != null;
    }

    public void setQueryIsSet(boolean value) {
      if (!value) {
        this.query = null;
      }
    }

    public int getFromIndex() {
      return this.fromIndex;
    }

    public void setFromIndex(int fromIndex) {
      this.fromIndex = fromIndex;
      setFromIndexIsSet(true);
    }

    public void unsetFromIndex() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FROMINDEX_ISSET_ID);
    }

    /** Returns true if field fromIndex is set (has been assigned a value) and false otherwise */
    public boolean isSetFromIndex() {
      return EncodingUtils.testBit(__isset_bitfield, __FROMINDEX_ISSET_ID);
    }

    public void setFromIndexIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FROMINDEX_ISSET_ID, value);
    }

    public int getCount() {
      return this.count;
    }

    public void setCount(int count) {
      this.count = count;
      setCountIsSet(true);
    }

    public void unsetCount() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COUNT_ISSET_ID);
    }

    /** Returns true if field count is set (has been assigned a value) and false otherwise */
    public boolean isSetCount() {
      return EncodingUtils.testBit(__isset_bitfield, __COUNT_ISSET_ID);
    }

    public void setCountIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COUNT_ISSET_ID, value);
    }

    /**
     * 
     * @see BuddySearchRequestSource
     */
    public BuddySearchRequestSource getRequestSource() {
      return this.requestSource;
    }

    /**
     * 
     * @see BuddySearchRequestSource
     */
    public void setRequestSource(BuddySearchRequestSource requestSource) {
      this.requestSource = requestSource;
    }

    public void unsetRequestSource() {
      this.requestSource = null;
    }

    /** Returns true if field requestSource is set (has been assigned a value) and false otherwise */
    public boolean isSetRequestSource() {
      return this.requestSource != null;
    }

    public void setRequestSourceIsSet(boolean value) {
      if (!value) {
        this.requestSource = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case LANGUAGE:
        if (value == null) {
          unsetLanguage();
        } else {
          setLanguage((String)value);
        }
        break;

      case COUNTRY:
        if (value == null) {
          unsetCountry();
        } else {
          setCountry((String)value);
        }
        break;

      case QUERY:
        if (value == null) {
          unsetQuery();
        } else {
          setQuery((String)value);
        }
        break;

      case FROM_INDEX:
        if (value == null) {
          unsetFromIndex();
        } else {
          setFromIndex((Integer)value);
        }
        break;

      case COUNT:
        if (value == null) {
          unsetCount();
        } else {
          setCount((Integer)value);
        }
        break;

      case REQUEST_SOURCE:
        if (value == null) {
          unsetRequestSource();
        } else {
          setRequestSource((BuddySearchRequestSource)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case LANGUAGE:
        return getLanguage();

      case COUNTRY:
        return getCountry();

      case QUERY:
        return getQuery();

      case FROM_INDEX:
        return getFromIndex();

      case COUNT:
        return getCount();

      case REQUEST_SOURCE:
        return getRequestSource();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case LANGUAGE:
        return isSetLanguage();
      case COUNTRY:
        return isSetCountry();
      case QUERY:
        return isSetQuery();
      case FROM_INDEX:
        return isSetFromIndex();
      case COUNT:
        return isSetCount();
      case REQUEST_SOURCE:
        return isSetRequestSource();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findBuddyContactsByQuery_args)
        return this.equals((findBuddyContactsByQuery_args)that);
      return false;
    }

    public boolean equals(findBuddyContactsByQuery_args that) {
      if (that == null)
        return false;

      boolean this_present_language = true && this.isSetLanguage();
      boolean that_present_language = true && that.isSetLanguage();
      if (this_present_language || that_present_language) {
        if (!(this_present_language && that_present_language))
          return false;
        if (!this.language.equals(that.language))
          return false;
      }

      boolean this_present_country = true && this.isSetCountry();
      boolean that_present_country = true && that.isSetCountry();
      if (this_present_country || that_present_country) {
        if (!(this_present_country && that_present_country))
          return false;
        if (!this.country.equals(that.country))
          return false;
      }

      boolean this_present_query = true && this.isSetQuery();
      boolean that_present_query = true && that.isSetQuery();
      if (this_present_query || that_present_query) {
        if (!(this_present_query && that_present_query))
          return false;
        if (!this.query.equals(that.query))
          return false;
      }

      boolean this_present_fromIndex = true;
      boolean that_present_fromIndex = true;
      if (this_present_fromIndex || that_present_fromIndex) {
        if (!(this_present_fromIndex && that_present_fromIndex))
          return false;
        if (this.fromIndex != that.fromIndex)
          return false;
      }

      boolean this_present_count = true;
      boolean that_present_count = true;
      if (this_present_count || that_present_count) {
        if (!(this_present_count && that_present_count))
          return false;
        if (this.count != that.count)
          return false;
      }

      boolean this_present_requestSource = true && this.isSetRequestSource();
      boolean that_present_requestSource = true && that.isSetRequestSource();
      if (this_present_requestSource || that_present_requestSource) {
        if (!(this_present_requestSource && that_present_requestSource))
          return false;
        if (!this.requestSource.equals(that.requestSource))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_language = true && (isSetLanguage());
      list.add(present_language);
      if (present_language)
        list.add(language);

      boolean present_country = true && (isSetCountry());
      list.add(present_country);
      if (present_country)
        list.add(country);

      boolean present_query = true && (isSetQuery());
      list.add(present_query);
      if (present_query)
        list.add(query);

      boolean present_fromIndex = true;
      list.add(present_fromIndex);
      if (present_fromIndex)
        list.add(fromIndex);

      boolean present_count = true;
      list.add(present_count);
      if (present_count)
        list.add(count);

      boolean present_requestSource = true && (isSetRequestSource());
      list.add(present_requestSource);
      if (present_requestSource)
        list.add(requestSource.getValue());

      return list.hashCode();
    }

    @Override
    public int compareTo(findBuddyContactsByQuery_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetLanguage()).compareTo(other.isSetLanguage());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetLanguage()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.language, other.language);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetCountry()).compareTo(other.isSetCountry());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCountry()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.country, other.country);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetQuery()).compareTo(other.isSetQuery());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetQuery()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.query, other.query);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetFromIndex()).compareTo(other.isSetFromIndex());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetFromIndex()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fromIndex, other.fromIndex);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetCount()).compareTo(other.isSetCount());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCount()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.count, other.count);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetRequestSource()).compareTo(other.isSetRequestSource());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetRequestSource()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestSource, other.requestSource);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findBuddyContactsByQuery_args(");
      boolean first = true;

      sb.append("language:");
      if (this.language == null) {
        sb.append("null");
      } else {
        sb.append(this.language);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("country:");
      if (this.country == null) {
        sb.append("null");
      } else {
        sb.append(this.country);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("query:");
      if (this.query == null) {
        sb.append("null");
      } else {
        sb.append(this.query);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("fromIndex:");
      sb.append(this.fromIndex);
      first = false;
      if (!first) sb.append(", ");
      sb.append("count:");
      sb.append(this.count);
      first = false;
      if (!first) sb.append(", ");
      sb.append("requestSource:");
      if (this.requestSource == null) {
        sb.append("null");
      } else {
        sb.append(this.requestSource);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findBuddyContactsByQuery_argsStandardSchemeFactory implements SchemeFactory {
      public findBuddyContactsByQuery_argsStandardScheme getScheme() {
        return new findBuddyContactsByQuery_argsStandardScheme();
      }
    }

    private static class findBuddyContactsByQuery_argsStandardScheme extends StandardScheme<findBuddyContactsByQuery_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findBuddyContactsByQuery_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 2: // LANGUAGE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.language = iprot.readString();
                struct.setLanguageIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // COUNTRY
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.country = iprot.readString();
                struct.setCountryIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 4: // QUERY
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.query = iprot.readString();
                struct.setQueryIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 5: // FROM_INDEX
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.fromIndex = iprot.readI32();
                struct.setFromIndexIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 6: // COUNT
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.count = iprot.readI32();
                struct.setCountIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 7: // REQUEST_SOURCE
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.requestSource = BuddySearchRequestSource.findByValue(iprot.readI32());
                struct.setRequestSourceIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findBuddyContactsByQuery_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.language != null) {
          oprot.writeFieldBegin(LANGUAGE_FIELD_DESC);
          oprot.writeString(struct.language);
          oprot.writeFieldEnd();
        }
        if (struct.country != null) {
          oprot.writeFieldBegin(COUNTRY_FIELD_DESC);
          oprot.writeString(struct.country);
          oprot.writeFieldEnd();
        }
        if (struct.query != null) {
          oprot.writeFieldBegin(QUERY_FIELD_DESC);
          oprot.writeString(struct.query);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(FROM_INDEX_FIELD_DESC);
        oprot.writeI32(struct.fromIndex);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(COUNT_FIELD_DESC);
        oprot.writeI32(struct.count);
        oprot.writeFieldEnd();
        if (struct.requestSource != null) {
          oprot.writeFieldBegin(REQUEST_SOURCE_FIELD_DESC);
          oprot.writeI32(struct.requestSource.getValue());
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findBuddyContactsByQuery_argsTupleSchemeFactory implements SchemeFactory {
      public findBuddyContactsByQuery_argsTupleScheme getScheme() {
        return new findBuddyContactsByQuery_argsTupleScheme();
      }
    }

    private static class findBuddyContactsByQuery_argsTupleScheme extends TupleScheme<findBuddyContactsByQuery_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findBuddyContactsByQuery_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetLanguage()) {
          optionals.set(0);
        }
        if (struct.isSetCountry()) {
          optionals.set(1);
        }
        if (struct.isSetQuery()) {
          optionals.set(2);
        }
        if (struct.isSetFromIndex()) {
          optionals.set(3);
        }
        if (struct.isSetCount()) {
          optionals.set(4);
        }
        if (struct.isSetRequestSource()) {
          optionals.set(5);
        }
        oprot.writeBitSet(optionals, 6);
        if (struct.isSetLanguage()) {
          oprot.writeString(struct.language);
        }
        if (struct.isSetCountry()) {
          oprot.writeString(struct.country);
        }
        if (struct.isSetQuery()) {
          oprot.writeString(struct.query);
        }
        if (struct.isSetFromIndex()) {
          oprot.writeI32(struct.fromIndex);
        }
        if (struct.isSetCount()) {
          oprot.writeI32(struct.count);
        }
        if (struct.isSetRequestSource()) {
          oprot.writeI32(struct.requestSource.getValue());
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findBuddyContactsByQuery_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(6);
        if (incoming.get(0)) {
          struct.language = iprot.readString();
          struct.setLanguageIsSet(true);
        }
        if (incoming.get(1)) {
          struct.country = iprot.readString();
          struct.setCountryIsSet(true);
        }
        if (incoming.get(2)) {
          struct.query = iprot.readString();
          struct.setQueryIsSet(true);
        }
        if (incoming.get(3)) {
          struct.fromIndex = iprot.readI32();
          struct.setFromIndexIsSet(true);
        }
        if (incoming.get(4)) {
          struct.count = iprot.readI32();
          struct.setCountIsSet(true);
        }
        if (incoming.get(5)) {
          struct.requestSource = BuddySearchRequestSource.findByValue(iprot.readI32());
          struct.setRequestSourceIsSet(true);
        }
      }
    }

  }

  public static class findBuddyContactsByQuery_result implements org.apache.thrift.TBase<findBuddyContactsByQuery_result, findBuddyContactsByQuery_result._Fields>, java.io.Serializable, Cloneable, Comparable<findBuddyContactsByQuery_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findBuddyContactsByQuery_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
    private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findBuddyContactsByQuery_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findBuddyContactsByQuery_resultTupleSchemeFactory());
    }

    private List<BuddySearchResult> success; // required
    private TalkException e; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      E((short)1, "e");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // E
            return E;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, BuddySearchResult.class))));
      tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findBuddyContactsByQuery_result.class, metaDataMap);
    }

    public findBuddyContactsByQuery_result() {
    }

    public findBuddyContactsByQuery_result(
      List<BuddySearchResult> success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findBuddyContactsByQuery_result(findBuddyContactsByQuery_result other) {
      if (other.isSetSuccess()) {
        List<BuddySearchResult> __this__success = new ArrayList<BuddySearchResult>(other.success.size());
        for (BuddySearchResult other_element : other.success) {
          __this__success.add(new BuddySearchResult(other_element));
        }
        this.success = __this__success;
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public findBuddyContactsByQuery_result deepCopy() {
      return new findBuddyContactsByQuery_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.e = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public java.util.Iterator<BuddySearchResult> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(BuddySearchResult elem) {
      if (this.success == null) {
        this.success = new ArrayList<BuddySearchResult>();
      }
      this.success.add(elem);
    }

    public List<BuddySearchResult> getSuccess() {
      return this.success;
    }

    public void setSuccess(List<BuddySearchResult> success) {
      this.success = success;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public void setE(TalkException e) {
      this.e = e;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((List<BuddySearchResult>)value);
        }
        break;

      case E:
        if (value == null) {
          unsetE();
        } else {
          setE((TalkException)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case E:
        return getE();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case E:
        return isSetE();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findBuddyContactsByQuery_result)
        return this.equals((findBuddyContactsByQuery_result)that);
      return false;
    }

    public boolean equals(findBuddyContactsByQuery_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_e = true && (isSetE());
      list.add(present_e);
      if (present_e)
        list.add(e);

      return list.hashCode();
    }

    @Override
    public int compareTo(findBuddyContactsByQuery_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetE()).compareTo(other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findBuddyContactsByQuery_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findBuddyContactsByQuery_resultStandardSchemeFactory implements SchemeFactory {
      public findBuddyContactsByQuery_resultStandardScheme getScheme() {
        return new findBuddyContactsByQuery_resultStandardScheme();
      }
    }

    private static class findBuddyContactsByQuery_resultStandardScheme extends StandardScheme<findBuddyContactsByQuery_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findBuddyContactsByQuery_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list556 = iprot.readListBegin();
                  struct.success = new ArrayList<BuddySearchResult>(_list556.size);
                  BuddySearchResult _elem557;
                  for (int _i558 = 0; _i558 < _list556.size; ++_i558)
                  {
                    _elem557 = new BuddySearchResult();
                    _elem557.read(iprot);
                    struct.success.add(_elem557);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // E
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.e = new TalkException();
                struct.e.read(iprot);
                struct.setEIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findBuddyContactsByQuery_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (BuddySearchResult _iter559 : struct.success)
            {
              _iter559.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        if (struct.e != null) {
          oprot.writeFieldBegin(E_FIELD_DESC);
          struct.e.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findBuddyContactsByQuery_resultTupleSchemeFactory implements SchemeFactory {
      public findBuddyContactsByQuery_resultTupleScheme getScheme() {
        return new findBuddyContactsByQuery_resultTupleScheme();
      }
    }

    private static class findBuddyContactsByQuery_resultTupleScheme extends TupleScheme<findBuddyContactsByQuery_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findBuddyContactsByQuery_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetE()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (BuddySearchResult _iter560 : struct.success)
            {
              _iter560.write(oprot);
            }
          }
        }
        if (struct.isSetE()) {
          struct.e.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findBuddyContactsByQuery_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list561 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new ArrayList<BuddySearchResult>(_list561.size);
            BuddySearchResult _elem562;
            for (int _i563 = 0; _i563 < _list561.size; ++_i563)
            {
              _elem562 = new BuddySearchResult();
              _elem562.read(iprot);
              struct.success.add(_elem562);
            }
          }
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.e = new TalkException();
          struct.e.read(iprot);
          struct.setEIsSet(true);
        }
      }
    }

  }

  public static class getBuddyContacts_args implements org.apache.thrift.TBase<getBuddyContacts_args, getBuddyContacts_args._Fields>, java.io.Serializable, Cloneable, Comparable<getBuddyContacts_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getBuddyContacts_args");

    private static final org.apache.thrift.protocol.TField LANGUAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("language", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField COUNTRY_FIELD_DESC = new org.apache.thrift.protocol.TField("country", org.apache.thrift.protocol.TType.STRING, (short)3);
    private static final org.apache.thrift.protocol.TField CLASSIFICATION_FIELD_DESC = new org.apache.thrift.protocol.TField("classification", org.apache.thrift.protocol.TType.STRING, (short)4);
    private static final org.apache.thrift.protocol.TField FROM_INDEX_FIELD_DESC = new org.apache.thrift.protocol.TField("fromIndex", org.apache.thrift.protocol.TType.I32, (short)5);
    private static final org.apache.thrift.protocol.TField COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("count", org.apache.thrift.protocol.TType.I32, (short)6);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getBuddyContacts_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getBuddyContacts_argsTupleSchemeFactory());
    }

    private String language; // required
    private String country; // required
    private String classification; // required
    private int fromIndex; // required
    private int count; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      LANGUAGE((short)2, "language"),
      COUNTRY((short)3, "country"),
      CLASSIFICATION((short)4, "classification"),
      FROM_INDEX((short)5, "fromIndex"),
      COUNT((short)6, "count");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 2: // LANGUAGE
            return LANGUAGE;
          case 3: // COUNTRY
            return COUNTRY;
          case 4: // CLASSIFICATION
            return CLASSIFICATION;
          case 5: // FROM_INDEX
            return FROM_INDEX;
          case 6: // COUNT
            return COUNT;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __FROMINDEX_ISSET_ID = 0;
    private static final int __COUNT_ISSET_ID = 1;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.LANGUAGE, new org.apache.thrift.meta_data.FieldMetaData("language", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.COUNTRY, new org.apache.thrift.meta_data.FieldMetaData("country", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.CLASSIFICATION, new org.apache.thrift.meta_data.FieldMetaData("classification", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.FROM_INDEX, new org.apache.thrift.meta_data.FieldMetaData("fromIndex", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.COUNT, new org.apache.thrift.meta_data.FieldMetaData("count", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getBuddyContacts_args.class, metaDataMap);
    }

    public getBuddyContacts_args() {
    }

    public getBuddyContacts_args(
      String language,
      String country,
      String classification,
      int fromIndex,
      int count)
    {
      this();
      this.language = language;
      this.country = country;
      this.classification = classification;
      this.fromIndex = fromIndex;
      setFromIndexIsSet(true);
      this.count = count;
      setCountIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBuddyContacts_args(getBuddyContacts_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetLanguage()) {
        this.language = other.language;
      }
      if (other.isSetCountry()) {
        this.country = other.country;
      }
      if (other.isSetClassification()) {
        this.classification = other.classification;
      }
      this.fromIndex = other.fromIndex;
      this.count = other.count;
    }

    public getBuddyContacts_args deepCopy() {
      return new getBuddyContacts_args(this);
    }

    @Override
    public void clear() {
      this.language = null;
      this.country = null;
      this.classification = null;
      setFromIndexIsSet(false);
      this.fromIndex = 0;
      setCountIsSet(false);
      this.count = 0;
    }

    public String getLanguage() {
      return this.language;
    }

    public void setLanguage(String language) {
      this.language = language;
    }

    public void unsetLanguage() {
      this.language = null;
    }

    /** Returns true if field language is set (has been assigned a value) and false otherwise */
    public boolean isSetLanguage() {
      return this.language != null;
    }

    public void setLanguageIsSet(boolean value) {
      if (!value) {
        this.language = null;
      }
    }

    public String getCountry() {
      return this.country;
    }

    public void setCountry(String country) {
      this.country = country;
    }

    public void unsetCountry() {
      this.country = null;
    }

    /** Returns true if field country is set (has been assigned a value) and false otherwise */
    public boolean isSetCountry() {
      return this.country != null;
    }

    public void setCountryIsSet(boolean value) {
      if (!value) {
        this.country = null;
      }
    }

    public String getClassification() {
      return this.classification;
    }

    public void setClassification(String classification) {
      this.classification = classification;
    }

    public void unsetClassification() {
      this.classification = null;
    }

    /** Returns true if field classification is set (has been assigned a value) and false otherwise */
    public boolean isSetClassification() {
      return this.classification != null;
    }

    public void setClassificationIsSet(boolean value) {
      if (!value) {
        this.classification = null;
      }
    }

    public int getFromIndex() {
      return this.fromIndex;
    }

    public void setFromIndex(int fromIndex) {
      this.fromIndex = fromIndex;
      setFromIndexIsSet(true);
    }

    public void unsetFromIndex() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FROMINDEX_ISSET_ID);
    }

    /** Returns true if field fromIndex is set (has been assigned a value) and false otherwise */
    public boolean isSetFromIndex() {
      return EncodingUtils.testBit(__isset_bitfield, __FROMINDEX_ISSET_ID);
    }

    public void setFromIndexIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FROMINDEX_ISSET_ID, value);
    }

    public int getCount() {
      return this.count;
    }

    public void setCount(int count) {
      this.count = count;
      setCountIsSet(true);
    }

    public void unsetCount() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COUNT_ISSET_ID);
    }

    /** Returns true if field count is set (has been assigned a value) and false otherwise */
    public boolean isSetCount() {
      return EncodingUtils.testBit(__isset_bitfield, __COUNT_ISSET_ID);
    }

    public void setCountIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COUNT_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case LANGUAGE:
        if (value == null) {
          unsetLanguage();
        } else {
          setLanguage((String)value);
        }
        break;

      case COUNTRY:
        if (value == null) {
          unsetCountry();
        } else {
          setCountry((String)value);
        }
        break;

      case CLASSIFICATION:
        if (value == null) {
          unsetClassification();
        } else {
          setClassification((String)value);
        }
        break;

      case FROM_INDEX:
        if (value == null) {
          unsetFromIndex();
        } else {
          setFromIndex((Integer)value);
        }
        break;

      case COUNT:
        if (value == null) {
          unsetCount();
        } else {
          setCount((Integer)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case LANGUAGE:
        return getLanguage();

      case COUNTRY:
        return getCountry();

      case CLASSIFICATION:
        return getClassification();

      case FROM_INDEX:
        return getFromIndex();

      case COUNT:
        return getCount();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case LANGUAGE:
        return isSetLanguage();
      case COUNTRY:
        return isSetCountry();
      case CLASSIFICATION:
        return isSetClassification();
      case FROM_INDEX:
        return isSetFromIndex();
      case COUNT:
        return isSetCount();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getBuddyContacts_args)
        return this.equals((getBuddyContacts_args)that);
      return false;
    }

    public boolean equals(getBuddyContacts_args that) {
      if (that == null)
        return false;

      boolean this_present_language = true && this.isSetLanguage();
      boolean that_present_language = true && that.isSetLanguage();
      if (this_present_language || that_present_language) {
        if (!(this_present_language && that_present_language))
          return false;
        if (!this.language.equals(that.language))
          return false;
      }

      boolean this_present_country = true && this.isSetCountry();
      boolean that_present_country = true && that.isSetCountry();
      if (this_present_country || that_present_country) {
        if (!(this_present_country && that_present_country))
          return false;
        if (!this.country.equals(that.country))
          return false;
      }

      boolean this_present_classification = true && this.isSetClassification();
      boolean that_present_classification = true && that.isSetClassification();
      if (this_present_classification || that_present_classification) {
        if (!(this_present_classification && that_present_classification))
          return false;
        if (!this.classification.equals(that.classification))
          return false;
      }

      boolean this_present_fromIndex = true;
      boolean that_present_fromIndex = true;
      if (this_present_fromIndex || that_present_fromIndex) {
        if (!(this_present_fromIndex && that_present_fromIndex))
          return false;
        if (this.fromIndex != that.fromIndex)
          return false;
      }

      boolean this_present_count = true;
      boolean that_present_count = true;
      if (this_present_count || that_present_count) {
        if (!(this_present_count && that_present_count))
          return false;
        if (this.count != that.count)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_language = true && (isSetLanguage());
      list.add(present_language);
      if (present_language)
        list.add(language);

      boolean present_country = true && (isSetCountry());
      list.add(present_country);
      if (present_country)
        list.add(country);

      boolean present_classification = true && (isSetClassification());
      list.add(present_classification);
      if (present_classification)
        list.add(classification);

      boolean present_fromIndex = true;
      list.add(present_fromIndex);
      if (present_fromIndex)
        list.add(fromIndex);

      boolean present_count = true;
      list.add(present_count);
      if (present_count)
        list.add(count);

      return list.hashCode();
    }

    @Override
    public int compareTo(getBuddyContacts_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetLanguage()).compareTo(other.isSetLanguage());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetLanguage()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.language, other.language);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetCountry()).compareTo(other.isSetCountry());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCountry()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.country, other.country);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetClassification()).compareTo(other.isSetClassification());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetClassification()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.classification, other.classification);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetFromIndex()).compareTo(other.isSetFromIndex());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetFromIndex()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fromIndex, other.fromIndex);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetCount()).compareTo(other.isSetCount());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCount()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.count, other.count);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getBuddyContacts_args(");
      boolean first = true;

      sb.append("language:");
      if (this.language == null) {
        sb.append("null");
      } else {
        sb.append(this.language);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("country:");
      if (this.country == null) {
        sb.append("null");
      } else {
        sb.append(this.country);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("classification:");
      if (this.classification == null) {
        sb.append("null");
      } else {
        sb.append(this.classification);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("fromIndex:");
      sb.append(this.fromIndex);
      first = false;
      if (!first) sb.append(", ");
      sb.append("count:");
      sb.append(this.count);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getBuddyContacts_argsStandardSchemeFactory implements SchemeFactory {
      public getBuddyContacts_argsStandardScheme getScheme() {
        return new getBuddyContacts_argsStandardScheme();
      }
    }

    private static class getBuddyContacts_argsStandardScheme extends StandardScheme<getBuddyContacts_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getBuddyContacts_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 2: // LANGUAGE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.language = iprot.readString();
                struct.setLanguageIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // COUNTRY
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.country = iprot.readString();
                struct.setCountryIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 4: // CLASSIFICATION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.classification = iprot.readString();
                struct.setClassificationIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 5: // FROM_INDEX
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.fromIndex = iprot.readI32();
                struct.setFromIndexIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 6: // COUNT
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.count = iprot.readI32();
                struct.setCountIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getBuddyContacts_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.language != null) {
          oprot.writeFieldBegin(LANGUAGE_FIELD_DESC);
          oprot.writeString(struct.language);
          oprot.writeFieldEnd();
        }
        if (struct.country != null) {
          oprot.writeFieldBegin(COUNTRY_FIELD_DESC);
          oprot.writeString(struct.country);
          oprot.writeFieldEnd();
        }
        if (struct.classification != null) {
          oprot.writeFieldBegin(CLASSIFICATION_FIELD_DESC);
          oprot.writeString(struct.classification);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(FROM_INDEX_FIELD_DESC);
        oprot.writeI32(struct.fromIndex);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(COUNT_FIELD_DESC);
        oprot.writeI32(struct.count);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getBuddyContacts_argsTupleSchemeFactory implements SchemeFactory {
      public getBuddyContacts_argsTupleScheme getScheme() {
        return new getBuddyContacts_argsTupleScheme();
      }
    }

    private static class getBuddyContacts_argsTupleScheme extends TupleScheme<getBuddyContacts_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getBuddyContacts_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetLanguage()) {
          optionals.set(0);
        }
        if (struct.isSetCountry()) {
          optionals.set(1);
        }
        if (struct.isSetClassification()) {
          optionals.set(2);
        }
        if (struct.isSetFromIndex()) {
          optionals.set(3);
        }
        if (struct.isSetCount()) {
          optionals.set(4);
        }
        oprot.writeBitSet(optionals, 5);
        if (struct.isSetLanguage()) {
          oprot.writeString(struct.language);
        }
        if (struct.isSetCountry()) {
          oprot.writeString(struct.country);
        }
        if (struct.isSetClassification()) {
          oprot.writeString(struct.classification);
        }
        if (struct.isSetFromIndex()) {
          oprot.writeI32(struct.fromIndex);
        }
        if (struct.isSetCount()) {
          oprot.writeI32(struct.count);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getBuddyContacts_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(5);
        if (incoming.get(0)) {
          struct.language = iprot.readString();
          struct.setLanguageIsSet(true);
        }
        if (incoming.get(1)) {
          struct.country = iprot.readString();
          struct.setCountryIsSet(true);
        }
        if (incoming.get(2)) {
          struct.classification = iprot.readString();
          struct.setClassificationIsSet(true);
        }
        if (incoming.get(3)) {
          struct.fromIndex = iprot.readI32();
          struct.setFromIndexIsSet(true);
        }
        if (incoming.get(4)) {
          struct.count = iprot.readI32();
          struct.setCountIsSet(true);
        }
      }
    }

  }

  public static class getBuddyContacts_result implements org.apache.thrift.TBase<getBuddyContacts_result, getBuddyContacts_result._Fields>, java.io.Serializable, Cloneable, Comparable<getBuddyContacts_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getBuddyContacts_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
    private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getBuddyContacts_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getBuddyContacts_resultTupleSchemeFactory());
    }

    private List<Contact> success; // required
    private TalkException e; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      E((short)1, "e");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // E
            return E;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Contact.class))));
      tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getBuddyContacts_result.class, metaDataMap);
    }

    public getBuddyContacts_result() {
    }

    public getBuddyContacts_result(
      List<Contact> success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBuddyContacts_result(getBuddyContacts_result other) {
      if (other.isSetSuccess()) {
        List<Contact> __this__success = new ArrayList<Contact>(other.success.size());
        for (Contact other_element : other.success) {
          __this__success.add(new Contact(other_element));
        }
        this.success = __this__success;
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public getBuddyContacts_result deepCopy() {
      return new getBuddyContacts_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.e = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public java.util.Iterator<Contact> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(Contact elem) {
      if (this.success == null) {
        this.success = new ArrayList<Contact>();
      }
      this.success.add(elem);
    }

    public List<Contact> getSuccess() {
      return this.success;
    }

    public void setSuccess(List<Contact> success) {
      this.success = success;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public void setE(TalkException e) {
      this.e = e;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((List<Contact>)value);
        }
        break;

      case E:
        if (value == null) {
          unsetE();
        } else {
          setE((TalkException)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case E:
        return getE();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case E:
        return isSetE();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getBuddyContacts_result)
        return this.equals((getBuddyContacts_result)that);
      return false;
    }

    public boolean equals(getBuddyContacts_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_e = true && (isSetE());
      list.add(present_e);
      if (present_e)
        list.add(e);

      return list.hashCode();
    }

    @Override
    public int compareTo(getBuddyContacts_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetE()).compareTo(other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getBuddyContacts_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getBuddyContacts_resultStandardSchemeFactory implements SchemeFactory {
      public getBuddyContacts_resultStandardScheme getScheme() {
        return new getBuddyContacts_resultStandardScheme();
      }
    }

    private static class getBuddyContacts_resultStandardScheme extends StandardScheme<getBuddyContacts_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getBuddyContacts_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list564 = iprot.readListBegin();
                  struct.success = new ArrayList<Contact>(_list564.size);
                  Contact _elem565;
                  for (int _i566 = 0; _i566 < _list564.size; ++_i566)
                  {
                    _elem565 = new Contact();
                    _elem565.read(iprot);
                    struct.success.add(_elem565);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // E
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.e = new TalkException();
                struct.e.read(iprot);
                struct.setEIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getBuddyContacts_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (Contact _iter567 : struct.success)
            {
              _iter567.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        if (struct.e != null) {
          oprot.writeFieldBegin(E_FIELD_DESC);
          struct.e.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getBuddyContacts_resultTupleSchemeFactory implements SchemeFactory {
      public getBuddyContacts_resultTupleScheme getScheme() {
        return new getBuddyContacts_resultTupleScheme();
      }
    }

    private static class getBuddyContacts_resultTupleScheme extends TupleScheme<getBuddyContacts_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getBuddyContacts_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetE()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (Contact _iter568 : struct.success)
            {
              _iter568.write(oprot);
            }
          }
        }
        if (struct.isSetE()) {
          struct.e.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getBuddyContacts_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list569 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new ArrayList<Contact>(_list569.size);
            Contact _elem570;
            for (int _i571 = 0; _i571 < _list569.size; ++_i571)
            {
              _elem570 = new Contact();
              _elem570.read(iprot);
              struct.success.add(_elem570);
            }
          }
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.e = new TalkException();
          struct.e.read(iprot);
          struct.setEIsSet(true);
        }
      }
    }

  }

  public static class getBuddyDetail_args implements org.apache.thrift.TBase<getBuddyDetail_args, getBuddyDetail_args._Fields>, java.io.Serializable, Cloneable, Comparable<getBuddyDetail_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getBuddyDetail_args");

    private static final org.apache.thrift.protocol.TField BUDDY_MID_FIELD_DESC = new org.apache.thrift.protocol.TField("buddyMid", org.apache.thrift.protocol.TType.STRING, (short)4);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getBuddyDetail_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getBuddyDetail_argsTupleSchemeFactory());
    }

    private String buddyMid; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      BUDDY_MID((short)4, "buddyMid");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 4: // BUDDY_MID
            return BUDDY_MID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.BUDDY_MID, new org.apache.thrift.meta_data.FieldMetaData("buddyMid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getBuddyDetail_args.class, metaDataMap);
    }

    public getBuddyDetail_args() {
    }

    public getBuddyDetail_args(
      String buddyMid)
    {
      this();
      this.buddyMid = buddyMid;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBuddyDetail_args(getBuddyDetail_args other) {
      if (other.isSetBuddyMid()) {
        this.buddyMid = other.buddyMid;
      }
    }

    public getBuddyDetail_args deepCopy() {
      return new getBuddyDetail_args(this);
    }

    @Override
    public void clear() {
      this.buddyMid = null;
    }

    public String getBuddyMid() {
      return this.buddyMid;
    }

    public void setBuddyMid(String buddyMid) {
      this.buddyMid = buddyMid;
    }

    public void unsetBuddyMid() {
      this.buddyMid = null;
    }

    /** Returns true if field buddyMid is set (has been assigned a value) and false otherwise */
    public boolean isSetBuddyMid() {
      return this.buddyMid != null;
    }

    public void setBuddyMidIsSet(boolean value) {
      if (!value) {
        this.buddyMid = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case BUDDY_MID:
        if (value == null) {
          unsetBuddyMid();
        } else {
          setBuddyMid((String)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case BUDDY_MID:
        return getBuddyMid();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case BUDDY_MID:
        return isSetBuddyMid();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getBuddyDetail_args)
        return this.equals((getBuddyDetail_args)that);
      return false;
    }

    public boolean equals(getBuddyDetail_args that) {
      if (that == null)
        return false;

      boolean this_present_buddyMid = true && this.isSetBuddyMid();
      boolean that_present_buddyMid = true && that.isSetBuddyMid();
      if (this_present_buddyMid || that_present_buddyMid) {
        if (!(this_present_buddyMid && that_present_buddyMid))
          return false;
        if (!this.buddyMid.equals(that.buddyMid))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_buddyMid = true && (isSetBuddyMid());
      list.add(present_buddyMid);
      if (present_buddyMid)
        list.add(buddyMid);

      return list.hashCode();
    }

    @Override
    public int compareTo(getBuddyDetail_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetBuddyMid()).compareTo(other.isSetBuddyMid());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetBuddyMid()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.buddyMid, other.buddyMid);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getBuddyDetail_args(");
      boolean first = true;

      sb.append("buddyMid:");
      if (this.buddyMid == null) {
        sb.append("null");
      } else {
        sb.append(this.buddyMid);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getBuddyDetail_argsStandardSchemeFactory implements SchemeFactory {
      public getBuddyDetail_argsStandardScheme getScheme() {
        return new getBuddyDetail_argsStandardScheme();
      }
    }

    private static class getBuddyDetail_argsStandardScheme extends StandardScheme<getBuddyDetail_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getBuddyDetail_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 4: // BUDDY_MID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.buddyMid = iprot.readString();
                struct.setBuddyMidIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getBuddyDetail_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.buddyMid != null) {
          oprot.writeFieldBegin(BUDDY_MID_FIELD_DESC);
          oprot.writeString(struct.buddyMid);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getBuddyDetail_argsTupleSchemeFactory implements SchemeFactory {
      public getBuddyDetail_argsTupleScheme getScheme() {
        return new getBuddyDetail_argsTupleScheme();
      }
    }

    private static class getBuddyDetail_argsTupleScheme extends TupleScheme<getBuddyDetail_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getBuddyDetail_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetBuddyMid()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetBuddyMid()) {
          oprot.writeString(struct.buddyMid);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getBuddyDetail_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.buddyMid = iprot.readString();
          struct.setBuddyMidIsSet(true);
        }
      }
    }

  }

  public static class getBuddyDetail_result implements org.apache.thrift.TBase<getBuddyDetail_result, getBuddyDetail_result._Fields>, java.io.Serializable, Cloneable, Comparable<getBuddyDetail_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getBuddyDetail_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
    private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getBuddyDetail_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getBuddyDetail_resultTupleSchemeFactory());
    }

    private BuddyDetail success; // required
    private TalkException e; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      E((short)1, "e");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // E
            return E;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, BuddyDetail.class)));
      tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getBuddyDetail_result.class, metaDataMap);
    }

    public getBuddyDetail_result() {
    }

    public getBuddyDetail_result(
      BuddyDetail success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBuddyDetail_result(getBuddyDetail_result other) {
      if (other.isSetSuccess()) {
        this.success = new BuddyDetail(other.success);
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public getBuddyDetail_result deepCopy() {
      return new getBuddyDetail_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.e = null;
    }

    public BuddyDetail getSuccess() {
      return this.success;
    }

    public void setSuccess(BuddyDetail success) {
      this.success = success;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public void setE(TalkException e) {
      this.e = e;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((BuddyDetail)value);
        }
        break;

      case E:
        if (value == null) {
          unsetE();
        } else {
          setE((TalkException)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case E:
        return getE();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case E:
        return isSetE();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getBuddyDetail_result)
        return this.equals((getBuddyDetail_result)that);
      return false;
    }

    public boolean equals(getBuddyDetail_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_e = true && (isSetE());
      list.add(present_e);
      if (present_e)
        list.add(e);

      return list.hashCode();
    }

    @Override
    public int compareTo(getBuddyDetail_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetE()).compareTo(other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getBuddyDetail_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getBuddyDetail_resultStandardSchemeFactory implements SchemeFactory {
      public getBuddyDetail_resultStandardScheme getScheme() {
        return new getBuddyDetail_resultStandardScheme();
      }
    }

    private static class getBuddyDetail_resultStandardScheme extends StandardScheme<getBuddyDetail_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getBuddyDetail_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new BuddyDetail();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // E
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.e = new TalkException();
                struct.e.read(iprot);
                struct.setEIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getBuddyDetail_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.e != null) {
          oprot.writeFieldBegin(E_FIELD_DESC);
          struct.e.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getBuddyDetail_resultTupleSchemeFactory implements SchemeFactory {
      public getBuddyDetail_resultTupleScheme getScheme() {
        return new getBuddyDetail_resultTupleScheme();
      }
    }

    private static class getBuddyDetail_resultTupleScheme extends TupleScheme<getBuddyDetail_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getBuddyDetail_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetE()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
        if (struct.isSetE()) {
          struct.e.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getBuddyDetail_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = new BuddyDetail();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.e = new TalkException();
          struct.e.read(iprot);
          struct.setEIsSet(true);
        }
      }
    }

  }

  public static class getBuddyOnAir_args implements org.apache.thrift.TBase<getBuddyOnAir_args, getBuddyOnAir_args._Fields>, java.io.Serializable, Cloneable, Comparable<getBuddyOnAir_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getBuddyOnAir_args");

    private static final org.apache.thrift.protocol.TField BUDDY_MID_FIELD_DESC = new org.apache.thrift.protocol.TField("buddyMid", org.apache.thrift.protocol.TType.STRING, (short)4);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getBuddyOnAir_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getBuddyOnAir_argsTupleSchemeFactory());
    }

    private String buddyMid; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      BUDDY_MID((short)4, "buddyMid");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 4: // BUDDY_MID
            return BUDDY_MID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.BUDDY_MID, new org.apache.thrift.meta_data.FieldMetaData("buddyMid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getBuddyOnAir_args.class, metaDataMap);
    }

    public getBuddyOnAir_args() {
    }

    public getBuddyOnAir_args(
      String buddyMid)
    {
      this();
      this.buddyMid = buddyMid;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBuddyOnAir_args(getBuddyOnAir_args other) {
      if (other.isSetBuddyMid()) {
        this.buddyMid = other.buddyMid;
      }
    }

    public getBuddyOnAir_args deepCopy() {
      return new getBuddyOnAir_args(this);
    }

    @Override
    public void clear() {
      this.buddyMid = null;
    }

    public String getBuddyMid() {
      return this.buddyMid;
    }

    public void setBuddyMid(String buddyMid) {
      this.buddyMid = buddyMid;
    }

    public void unsetBuddyMid() {
      this.buddyMid = null;
    }

    /** Returns true if field buddyMid is set (has been assigned a value) and false otherwise */
    public boolean isSetBuddyMid() {
      return this.buddyMid != null;
    }

    public void setBuddyMidIsSet(boolean value) {
      if (!value) {
        this.buddyMid = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case BUDDY_MID:
        if (value == null) {
          unsetBuddyMid();
        } else {
          setBuddyMid((String)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case BUDDY_MID:
        return getBuddyMid();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case BUDDY_MID:
        return isSetBuddyMid();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getBuddyOnAir_args)
        return this.equals((getBuddyOnAir_args)that);
      return false;
    }

    public boolean equals(getBuddyOnAir_args that) {
      if (that == null)
        return false;

      boolean this_present_buddyMid = true && this.isSetBuddyMid();
      boolean that_present_buddyMid = true && that.isSetBuddyMid();
      if (this_present_buddyMid || that_present_buddyMid) {
        if (!(this_present_buddyMid && that_present_buddyMid))
          return false;
        if (!this.buddyMid.equals(that.buddyMid))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_buddyMid = true && (isSetBuddyMid());
      list.add(present_buddyMid);
      if (present_buddyMid)
        list.add(buddyMid);

      return list.hashCode();
    }

    @Override
    public int compareTo(getBuddyOnAir_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetBuddyMid()).compareTo(other.isSetBuddyMid());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetBuddyMid()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.buddyMid, other.buddyMid);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getBuddyOnAir_args(");
      boolean first = true;

      sb.append("buddyMid:");
      if (this.buddyMid == null) {
        sb.append("null");
      } else {
        sb.append(this.buddyMid);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getBuddyOnAir_argsStandardSchemeFactory implements SchemeFactory {
      public getBuddyOnAir_argsStandardScheme getScheme() {
        return new getBuddyOnAir_argsStandardScheme();
      }
    }

    private static class getBuddyOnAir_argsStandardScheme extends StandardScheme<getBuddyOnAir_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getBuddyOnAir_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 4: // BUDDY_MID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.buddyMid = iprot.readString();
                struct.setBuddyMidIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getBuddyOnAir_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.buddyMid != null) {
          oprot.writeFieldBegin(BUDDY_MID_FIELD_DESC);
          oprot.writeString(struct.buddyMid);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getBuddyOnAir_argsTupleSchemeFactory implements SchemeFactory {
      public getBuddyOnAir_argsTupleScheme getScheme() {
        return new getBuddyOnAir_argsTupleScheme();
      }
    }

    private static class getBuddyOnAir_argsTupleScheme extends TupleScheme<getBuddyOnAir_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getBuddyOnAir_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetBuddyMid()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetBuddyMid()) {
          oprot.writeString(struct.buddyMid);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getBuddyOnAir_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.buddyMid = iprot.readString();
          struct.setBuddyMidIsSet(true);
        }
      }
    }

  }

  public static class getBuddyOnAir_result implements org.apache.thrift.TBase<getBuddyOnAir_result, getBuddyOnAir_result._Fields>, java.io.Serializable, Cloneable, Comparable<getBuddyOnAir_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getBuddyOnAir_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
    private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getBuddyOnAir_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getBuddyOnAir_resultTupleSchemeFactory());
    }

    private BuddyOnAir success; // required
    private TalkException e; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      E((short)1, "e");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // E
            return E;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, BuddyOnAir.class)));
      tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getBuddyOnAir_result.class, metaDataMap);
    }

    public getBuddyOnAir_result() {
    }

    public getBuddyOnAir_result(
      BuddyOnAir success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBuddyOnAir_result(getBuddyOnAir_result other) {
      if (other.isSetSuccess()) {
        this.success = new BuddyOnAir(other.success);
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public getBuddyOnAir_result deepCopy() {
      return new getBuddyOnAir_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.e = null;
    }

    public BuddyOnAir getSuccess() {
      return this.success;
    }

    public void setSuccess(BuddyOnAir success) {
      this.success = success;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public void setE(TalkException e) {
      this.e = e;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((BuddyOnAir)value);
        }
        break;

      case E:
        if (value == null) {
          unsetE();
        } else {
          setE((TalkException)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case E:
        return getE();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case E:
        return isSetE();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getBuddyOnAir_result)
        return this.equals((getBuddyOnAir_result)that);
      return false;
    }

    public boolean equals(getBuddyOnAir_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_e = true && (isSetE());
      list.add(present_e);
      if (present_e)
        list.add(e);

      return list.hashCode();
    }

    @Override
    public int compareTo(getBuddyOnAir_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetE()).compareTo(other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getBuddyOnAir_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getBuddyOnAir_resultStandardSchemeFactory implements SchemeFactory {
      public getBuddyOnAir_resultStandardScheme getScheme() {
        return new getBuddyOnAir_resultStandardScheme();
      }
    }

    private static class getBuddyOnAir_resultStandardScheme extends StandardScheme<getBuddyOnAir_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getBuddyOnAir_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new BuddyOnAir();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // E
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.e = new TalkException();
                struct.e.read(iprot);
                struct.setEIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getBuddyOnAir_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.e != null) {
          oprot.writeFieldBegin(E_FIELD_DESC);
          struct.e.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getBuddyOnAir_resultTupleSchemeFactory implements SchemeFactory {
      public getBuddyOnAir_resultTupleScheme getScheme() {
        return new getBuddyOnAir_resultTupleScheme();
      }
    }

    private static class getBuddyOnAir_resultTupleScheme extends TupleScheme<getBuddyOnAir_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getBuddyOnAir_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetE()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
        if (struct.isSetE()) {
          struct.e.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getBuddyOnAir_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = new BuddyOnAir();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.e = new TalkException();
          struct.e.read(iprot);
          struct.setEIsSet(true);
        }
      }
    }

  }

  public static class getCountriesHavingBuddy_args implements org.apache.thrift.TBase<getCountriesHavingBuddy_args, getCountriesHavingBuddy_args._Fields>, java.io.Serializable, Cloneable, Comparable<getCountriesHavingBuddy_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getCountriesHavingBuddy_args");


    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getCountriesHavingBuddy_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getCountriesHavingBuddy_argsTupleSchemeFactory());
    }


    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
;

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getCountriesHavingBuddy_args.class, metaDataMap);
    }

    public getCountriesHavingBuddy_args() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getCountriesHavingBuddy_args(getCountriesHavingBuddy_args other) {
    }

    public getCountriesHavingBuddy_args deepCopy() {
      return new getCountriesHavingBuddy_args(this);
    }

    @Override
    public void clear() {
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getCountriesHavingBuddy_args)
        return this.equals((getCountriesHavingBuddy_args)that);
      return false;
    }

    public boolean equals(getCountriesHavingBuddy_args that) {
      if (that == null)
        return false;

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      return list.hashCode();
    }

    @Override
    public int compareTo(getCountriesHavingBuddy_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getCountriesHavingBuddy_args(");
      boolean first = true;

      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getCountriesHavingBuddy_argsStandardSchemeFactory implements SchemeFactory {
      public getCountriesHavingBuddy_argsStandardScheme getScheme() {
        return new getCountriesHavingBuddy_argsStandardScheme();
      }
    }

    private static class getCountriesHavingBuddy_argsStandardScheme extends StandardScheme<getCountriesHavingBuddy_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getCountriesHavingBuddy_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getCountriesHavingBuddy_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getCountriesHavingBuddy_argsTupleSchemeFactory implements SchemeFactory {
      public getCountriesHavingBuddy_argsTupleScheme getScheme() {
        return new getCountriesHavingBuddy_argsTupleScheme();
      }
    }

    private static class getCountriesHavingBuddy_argsTupleScheme extends TupleScheme<getCountriesHavingBuddy_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getCountriesHavingBuddy_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getCountriesHavingBuddy_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
      }
    }

  }

  public static class getCountriesHavingBuddy_result implements org.apache.thrift.TBase<getCountriesHavingBuddy_result, getCountriesHavingBuddy_result._Fields>, java.io.Serializable, Cloneable, Comparable<getCountriesHavingBuddy_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getCountriesHavingBuddy_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
    private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getCountriesHavingBuddy_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getCountriesHavingBuddy_resultTupleSchemeFactory());
    }

    private List<String> success; // required
    private TalkException e; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      E((short)1, "e");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // E
            return E;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
      tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getCountriesHavingBuddy_result.class, metaDataMap);
    }

    public getCountriesHavingBuddy_result() {
    }

    public getCountriesHavingBuddy_result(
      List<String> success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getCountriesHavingBuddy_result(getCountriesHavingBuddy_result other) {
      if (other.isSetSuccess()) {
        List<String> __this__success = new ArrayList<String>(other.success);
        this.success = __this__success;
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public getCountriesHavingBuddy_result deepCopy() {
      return new getCountriesHavingBuddy_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.e = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public java.util.Iterator<String> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(String elem) {
      if (this.success == null) {
        this.success = new ArrayList<String>();
      }
      this.success.add(elem);
    }

    public List<String> getSuccess() {
      return this.success;
    }

    public void setSuccess(List<String> success) {
      this.success = success;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public void setE(TalkException e) {
      this.e = e;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((List<String>)value);
        }
        break;

      case E:
        if (value == null) {
          unsetE();
        } else {
          setE((TalkException)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case E:
        return getE();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case E:
        return isSetE();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getCountriesHavingBuddy_result)
        return this.equals((getCountriesHavingBuddy_result)that);
      return false;
    }

    public boolean equals(getCountriesHavingBuddy_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_e = true && (isSetE());
      list.add(present_e);
      if (present_e)
        list.add(e);

      return list.hashCode();
    }

    @Override
    public int compareTo(getCountriesHavingBuddy_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetE()).compareTo(other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getCountriesHavingBuddy_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getCountriesHavingBuddy_resultStandardSchemeFactory implements SchemeFactory {
      public getCountriesHavingBuddy_resultStandardScheme getScheme() {
        return new getCountriesHavingBuddy_resultStandardScheme();
      }
    }

    private static class getCountriesHavingBuddy_resultStandardScheme extends StandardScheme<getCountriesHavingBuddy_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getCountriesHavingBuddy_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list572 = iprot.readListBegin();
                  struct.success = new ArrayList<String>(_list572.size);
                  String _elem573;
                  for (int _i574 = 0; _i574 < _list572.size; ++_i574)
                  {
                    _elem573 = iprot.readString();
                    struct.success.add(_elem573);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // E
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.e = new TalkException();
                struct.e.read(iprot);
                struct.setEIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getCountriesHavingBuddy_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.success.size()));
            for (String _iter575 : struct.success)
            {
              oprot.writeString(_iter575);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        if (struct.e != null) {
          oprot.writeFieldBegin(E_FIELD_DESC);
          struct.e.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getCountriesHavingBuddy_resultTupleSchemeFactory implements SchemeFactory {
      public getCountriesHavingBuddy_resultTupleScheme getScheme() {
        return new getCountriesHavingBuddy_resultTupleScheme();
      }
    }

    private static class getCountriesHavingBuddy_resultTupleScheme extends TupleScheme<getCountriesHavingBuddy_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getCountriesHavingBuddy_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetE()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (String _iter576 : struct.success)
            {
              oprot.writeString(_iter576);
            }
          }
        }
        if (struct.isSetE()) {
          struct.e.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getCountriesHavingBuddy_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list577 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
            struct.success = new ArrayList<String>(_list577.size);
            String _elem578;
            for (int _i579 = 0; _i579 < _list577.size; ++_i579)
            {
              _elem578 = iprot.readString();
              struct.success.add(_elem578);
            }
          }
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.e = new TalkException();
          struct.e.read(iprot);
          struct.setEIsSet(true);
        }
      }
    }

  }

  public static class getNewlyReleasedBuddyIds_args implements org.apache.thrift.TBase<getNewlyReleasedBuddyIds_args, getNewlyReleasedBuddyIds_args._Fields>, java.io.Serializable, Cloneable, Comparable<getNewlyReleasedBuddyIds_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getNewlyReleasedBuddyIds_args");

    private static final org.apache.thrift.protocol.TField COUNTRY_FIELD_DESC = new org.apache.thrift.protocol.TField("country", org.apache.thrift.protocol.TType.STRING, (short)3);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getNewlyReleasedBuddyIds_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getNewlyReleasedBuddyIds_argsTupleSchemeFactory());
    }

    private String country; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      COUNTRY((short)3, "country");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 3: // COUNTRY
            return COUNTRY;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.COUNTRY, new org.apache.thrift.meta_data.FieldMetaData("country", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getNewlyReleasedBuddyIds_args.class, metaDataMap);
    }

    public getNewlyReleasedBuddyIds_args() {
    }

    public getNewlyReleasedBuddyIds_args(
      String country)
    {
      this();
      this.country = country;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getNewlyReleasedBuddyIds_args(getNewlyReleasedBuddyIds_args other) {
      if (other.isSetCountry()) {
        this.country = other.country;
      }
    }

    public getNewlyReleasedBuddyIds_args deepCopy() {
      return new getNewlyReleasedBuddyIds_args(this);
    }

    @Override
    public void clear() {
      this.country = null;
    }

    public String getCountry() {
      return this.country;
    }

    public void setCountry(String country) {
      this.country = country;
    }

    public void unsetCountry() {
      this.country = null;
    }

    /** Returns true if field country is set (has been assigned a value) and false otherwise */
    public boolean isSetCountry() {
      return this.country != null;
    }

    public void setCountryIsSet(boolean value) {
      if (!value) {
        this.country = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case COUNTRY:
        if (value == null) {
          unsetCountry();
        } else {
          setCountry((String)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case COUNTRY:
        return getCountry();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case COUNTRY:
        return isSetCountry();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getNewlyReleasedBuddyIds_args)
        return this.equals((getNewlyReleasedBuddyIds_args)that);
      return false;
    }

    public boolean equals(getNewlyReleasedBuddyIds_args that) {
      if (that == null)
        return false;

      boolean this_present_country = true && this.isSetCountry();
      boolean that_present_country = true && that.isSetCountry();
      if (this_present_country || that_present_country) {
        if (!(this_present_country && that_present_country))
          return false;
        if (!this.country.equals(that.country))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_country = true && (isSetCountry());
      list.add(present_country);
      if (present_country)
        list.add(country);

      return list.hashCode();
    }

    @Override
    public int compareTo(getNewlyReleasedBuddyIds_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetCountry()).compareTo(other.isSetCountry());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCountry()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.country, other.country);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getNewlyReleasedBuddyIds_args(");
      boolean first = true;

      sb.append("country:");
      if (this.country == null) {
        sb.append("null");
      } else {
        sb.append(this.country);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getNewlyReleasedBuddyIds_argsStandardSchemeFactory implements SchemeFactory {
      public getNewlyReleasedBuddyIds_argsStandardScheme getScheme() {
        return new getNewlyReleasedBuddyIds_argsStandardScheme();
      }
    }

    private static class getNewlyReleasedBuddyIds_argsStandardScheme extends StandardScheme<getNewlyReleasedBuddyIds_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getNewlyReleasedBuddyIds_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 3: // COUNTRY
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.country = iprot.readString();
                struct.setCountryIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getNewlyReleasedBuddyIds_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.country != null) {
          oprot.writeFieldBegin(COUNTRY_FIELD_DESC);
          oprot.writeString(struct.country);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getNewlyReleasedBuddyIds_argsTupleSchemeFactory implements SchemeFactory {
      public getNewlyReleasedBuddyIds_argsTupleScheme getScheme() {
        return new getNewlyReleasedBuddyIds_argsTupleScheme();
      }
    }

    private static class getNewlyReleasedBuddyIds_argsTupleScheme extends TupleScheme<getNewlyReleasedBuddyIds_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getNewlyReleasedBuddyIds_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetCountry()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetCountry()) {
          oprot.writeString(struct.country);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getNewlyReleasedBuddyIds_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.country = iprot.readString();
          struct.setCountryIsSet(true);
        }
      }
    }

  }

  public static class getNewlyReleasedBuddyIds_result implements org.apache.thrift.TBase<getNewlyReleasedBuddyIds_result, getNewlyReleasedBuddyIds_result._Fields>, java.io.Serializable, Cloneable, Comparable<getNewlyReleasedBuddyIds_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getNewlyReleasedBuddyIds_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.MAP, (short)0);
    private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getNewlyReleasedBuddyIds_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getNewlyReleasedBuddyIds_resultTupleSchemeFactory());
    }

    private Map<String,Long> success; // required
    private TalkException e; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      E((short)1, "e");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // E
            return E;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
      tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getNewlyReleasedBuddyIds_result.class, metaDataMap);
    }

    public getNewlyReleasedBuddyIds_result() {
    }

    public getNewlyReleasedBuddyIds_result(
      Map<String,Long> success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getNewlyReleasedBuddyIds_result(getNewlyReleasedBuddyIds_result other) {
      if (other.isSetSuccess()) {
        Map<String,Long> __this__success = new HashMap<String,Long>(other.success);
        this.success = __this__success;
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public getNewlyReleasedBuddyIds_result deepCopy() {
      return new getNewlyReleasedBuddyIds_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.e = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public void putToSuccess(String key, long val) {
      if (this.success == null) {
        this.success = new HashMap<String,Long>();
      }
      this.success.put(key, val);
    }

    public Map<String,Long> getSuccess() {
      return this.success;
    }

    public void setSuccess(Map<String,Long> success) {
      this.success = success;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public void setE(TalkException e) {
      this.e = e;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((Map<String,Long>)value);
        }
        break;

      case E:
        if (value == null) {
          unsetE();
        } else {
          setE((TalkException)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case E:
        return getE();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case E:
        return isSetE();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getNewlyReleasedBuddyIds_result)
        return this.equals((getNewlyReleasedBuddyIds_result)that);
      return false;
    }

    public boolean equals(getNewlyReleasedBuddyIds_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_e = true && (isSetE());
      list.add(present_e);
      if (present_e)
        list.add(e);

      return list.hashCode();
    }

    @Override
    public int compareTo(getNewlyReleasedBuddyIds_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetE()).compareTo(other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getNewlyReleasedBuddyIds_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getNewlyReleasedBuddyIds_resultStandardSchemeFactory implements SchemeFactory {
      public getNewlyReleasedBuddyIds_resultStandardScheme getScheme() {
        return new getNewlyReleasedBuddyIds_resultStandardScheme();
      }
    }

    private static class getNewlyReleasedBuddyIds_resultStandardScheme extends StandardScheme<getNewlyReleasedBuddyIds_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getNewlyReleasedBuddyIds_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
                {
                  org.apache.thrift.protocol.TMap _map580 = iprot.readMapBegin();
                  struct.success = new HashMap<String,Long>(2*_map580.size);
                  String _key581;
                  long _val582;
                  for (int _i583 = 0; _i583 < _map580.size; ++_i583)
                  {
                    _key581 = iprot.readString();
                    _val582 = iprot.readI64();
                    struct.success.put(_key581, _val582);
                  }
                  iprot.readMapEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // E
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.e = new TalkException();
                struct.e.read(iprot);
                struct.setEIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getNewlyReleasedBuddyIds_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.I64, struct.success.size()));
            for (Map.Entry<String, Long> _iter584 : struct.success.entrySet())
            {
              oprot.writeString(_iter584.getKey());
              oprot.writeI64(_iter584.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
        if (struct.e != null) {
          oprot.writeFieldBegin(E_FIELD_DESC);
          struct.e.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getNewlyReleasedBuddyIds_resultTupleSchemeFactory implements SchemeFactory {
      public getNewlyReleasedBuddyIds_resultTupleScheme getScheme() {
        return new getNewlyReleasedBuddyIds_resultTupleScheme();
      }
    }

    private static class getNewlyReleasedBuddyIds_resultTupleScheme extends TupleScheme<getNewlyReleasedBuddyIds_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getNewlyReleasedBuddyIds_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetE()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (Map.Entry<String, Long> _iter585 : struct.success.entrySet())
            {
              oprot.writeString(_iter585.getKey());
              oprot.writeI64(_iter585.getValue());
            }
          }
        }
        if (struct.isSetE()) {
          struct.e.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getNewlyReleasedBuddyIds_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TMap _map586 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.I64, iprot.readI32());
            struct.success = new HashMap<String,Long>(2*_map586.size);
            String _key587;
            long _val588;
            for (int _i589 = 0; _i589 < _map586.size; ++_i589)
            {
              _key587 = iprot.readString();
              _val588 = iprot.readI64();
              struct.success.put(_key587, _val588);
            }
          }
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.e = new TalkException();
          struct.e.read(iprot);
          struct.setEIsSet(true);
        }
      }
    }

  }

  public static class getPopularBuddyBanner_args implements org.apache.thrift.TBase<getPopularBuddyBanner_args, getPopularBuddyBanner_args._Fields>, java.io.Serializable, Cloneable, Comparable<getPopularBuddyBanner_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getPopularBuddyBanner_args");

    private static final org.apache.thrift.protocol.TField LANGUAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("language", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField COUNTRY_FIELD_DESC = new org.apache.thrift.protocol.TField("country", org.apache.thrift.protocol.TType.STRING, (short)3);
    private static final org.apache.thrift.protocol.TField APPLICATION_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("applicationType", org.apache.thrift.protocol.TType.I32, (short)4);
    private static final org.apache.thrift.protocol.TField RESOURCE_SPECIFICATION_FIELD_DESC = new org.apache.thrift.protocol.TField("resourceSpecification", org.apache.thrift.protocol.TType.STRING, (short)5);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getPopularBuddyBanner_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getPopularBuddyBanner_argsTupleSchemeFactory());
    }

    private String language; // required
    private String country; // required
    private ApplicationType applicationType; // required
    private String resourceSpecification; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      LANGUAGE((short)2, "language"),
      COUNTRY((short)3, "country"),
      /**
       * 
       * @see ApplicationType
       */
      APPLICATION_TYPE((short)4, "applicationType"),
      RESOURCE_SPECIFICATION((short)5, "resourceSpecification");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 2: // LANGUAGE
            return LANGUAGE;
          case 3: // COUNTRY
            return COUNTRY;
          case 4: // APPLICATION_TYPE
            return APPLICATION_TYPE;
          case 5: // RESOURCE_SPECIFICATION
            return RESOURCE_SPECIFICATION;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.LANGUAGE, new org.apache.thrift.meta_data.FieldMetaData("language", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.COUNTRY, new org.apache.thrift.meta_data.FieldMetaData("country", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.APPLICATION_TYPE, new org.apache.thrift.meta_data.FieldMetaData("applicationType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, ApplicationType.class)));
      tmpMap.put(_Fields.RESOURCE_SPECIFICATION, new org.apache.thrift.meta_data.FieldMetaData("resourceSpecification", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getPopularBuddyBanner_args.class, metaDataMap);
    }

    public getPopularBuddyBanner_args() {
    }

    public getPopularBuddyBanner_args(
      String language,
      String country,
      ApplicationType applicationType,
      String resourceSpecification)
    {
      this();
      this.language = language;
      this.country = country;
      this.applicationType = applicationType;
      this.resourceSpecification = resourceSpecification;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getPopularBuddyBanner_args(getPopularBuddyBanner_args other) {
      if (other.isSetLanguage()) {
        this.language = other.language;
      }
      if (other.isSetCountry()) {
        this.country = other.country;
      }
      if (other.isSetApplicationType()) {
        this.applicationType = other.applicationType;
      }
      if (other.isSetResourceSpecification()) {
        this.resourceSpecification = other.resourceSpecification;
      }
    }

    public getPopularBuddyBanner_args deepCopy() {
      return new getPopularBuddyBanner_args(this);
    }

    @Override
    public void clear() {
      this.language = null;
      this.country = null;
      this.applicationType = null;
      this.resourceSpecification = null;
    }

    public String getLanguage() {
      return this.language;
    }

    public void setLanguage(String language) {
      this.language = language;
    }

    public void unsetLanguage() {
      this.language = null;
    }

    /** Returns true if field language is set (has been assigned a value) and false otherwise */
    public boolean isSetLanguage() {
      return this.language != null;
    }

    public void setLanguageIsSet(boolean value) {
      if (!value) {
        this.language = null;
      }
    }

    public String getCountry() {
      return this.country;
    }

    public void setCountry(String country) {
      this.country = country;
    }

    public void unsetCountry() {
      this.country = null;
    }

    /** Returns true if field country is set (has been assigned a value) and false otherwise */
    public boolean isSetCountry() {
      return this.country != null;
    }

    public void setCountryIsSet(boolean value) {
      if (!value) {
        this.country = null;
      }
    }

    /**
     * 
     * @see ApplicationType
     */
    public ApplicationType getApplicationType() {
      return this.applicationType;
    }

    /**
     * 
     * @see ApplicationType
     */
    public void setApplicationType(ApplicationType applicationType) {
      this.applicationType = applicationType;
    }

    public void unsetApplicationType() {
      this.applicationType = null;
    }

    /** Returns true if field applicationType is set (has been assigned a value) and false otherwise */
    public boolean isSetApplicationType() {
      return this.applicationType != null;
    }

    public void setApplicationTypeIsSet(boolean value) {
      if (!value) {
        this.applicationType = null;
      }
    }

    public String getResourceSpecification() {
      return this.resourceSpecification;
    }

    public void setResourceSpecification(String resourceSpecification) {
      this.resourceSpecification = resourceSpecification;
    }

    public void unsetResourceSpecification() {
      this.resourceSpecification = null;
    }

    /** Returns true if field resourceSpecification is set (has been assigned a value) and false otherwise */
    public boolean isSetResourceSpecification() {
      return this.resourceSpecification != null;
    }

    public void setResourceSpecificationIsSet(boolean value) {
      if (!value) {
        this.resourceSpecification = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case LANGUAGE:
        if (value == null) {
          unsetLanguage();
        } else {
          setLanguage((String)value);
        }
        break;

      case COUNTRY:
        if (value == null) {
          unsetCountry();
        } else {
          setCountry((String)value);
        }
        break;

      case APPLICATION_TYPE:
        if (value == null) {
          unsetApplicationType();
        } else {
          setApplicationType((ApplicationType)value);
        }
        break;

      case RESOURCE_SPECIFICATION:
        if (value == null) {
          unsetResourceSpecification();
        } else {
          setResourceSpecification((String)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case LANGUAGE:
        return getLanguage();

      case COUNTRY:
        return getCountry();

      case APPLICATION_TYPE:
        return getApplicationType();

      case RESOURCE_SPECIFICATION:
        return getResourceSpecification();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case LANGUAGE:
        return isSetLanguage();
      case COUNTRY:
        return isSetCountry();
      case APPLICATION_TYPE:
        return isSetApplicationType();
      case RESOURCE_SPECIFICATION:
        return isSetResourceSpecification();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getPopularBuddyBanner_args)
        return this.equals((getPopularBuddyBanner_args)that);
      return false;
    }

    public boolean equals(getPopularBuddyBanner_args that) {
      if (that == null)
        return false;

      boolean this_present_language = true && this.isSetLanguage();
      boolean that_present_language = true && that.isSetLanguage();
      if (this_present_language || that_present_language) {
        if (!(this_present_language && that_present_language))
          return false;
        if (!this.language.equals(that.language))
          return false;
      }

      boolean this_present_country = true && this.isSetCountry();
      boolean that_present_country = true && that.isSetCountry();
      if (this_present_country || that_present_country) {
        if (!(this_present_country && that_present_country))
          return false;
        if (!this.country.equals(that.country))
          return false;
      }

      boolean this_present_applicationType = true && this.isSetApplicationType();
      boolean that_present_applicationType = true && that.isSetApplicationType();
      if (this_present_applicationType || that_present_applicationType) {
        if (!(this_present_applicationType && that_present_applicationType))
          return false;
        if (!this.applicationType.equals(that.applicationType))
          return false;
      }

      boolean this_present_resourceSpecification = true && this.isSetResourceSpecification();
      boolean that_present_resourceSpecification = true && that.isSetResourceSpecification();
      if (this_present_resourceSpecification || that_present_resourceSpecification) {
        if (!(this_present_resourceSpecification && that_present_resourceSpecification))
          return false;
        if (!this.resourceSpecification.equals(that.resourceSpecification))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_language = true && (isSetLanguage());
      list.add(present_language);
      if (present_language)
        list.add(language);

      boolean present_country = true && (isSetCountry());
      list.add(present_country);
      if (present_country)
        list.add(country);

      boolean present_applicationType = true && (isSetApplicationType());
      list.add(present_applicationType);
      if (present_applicationType)
        list.add(applicationType.getValue());

      boolean present_resourceSpecification = true && (isSetResourceSpecification());
      list.add(present_resourceSpecification);
      if (present_resourceSpecification)
        list.add(resourceSpecification);

      return list.hashCode();
    }

    @Override
    public int compareTo(getPopularBuddyBanner_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetLanguage()).compareTo(other.isSetLanguage());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetLanguage()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.language, other.language);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetCountry()).compareTo(other.isSetCountry());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCountry()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.country, other.country);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetApplicationType()).compareTo(other.isSetApplicationType());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetApplicationType()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applicationType, other.applicationType);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetResourceSpecification()).compareTo(other.isSetResourceSpecification());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetResourceSpecification()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resourceSpecification, other.resourceSpecification);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getPopularBuddyBanner_args(");
      boolean first = true;

      sb.append("language:");
      if (this.language == null) {
        sb.append("null");
      } else {
        sb.append(this.language);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("country:");
      if (this.country == null) {
        sb.append("null");
      } else {
        sb.append(this.country);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("applicationType:");
      if (this.applicationType == null) {
        sb.append("null");
      } else {
        sb.append(this.applicationType);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("resourceSpecification:");
      if (this.resourceSpecification == null) {
        sb.append("null");
      } else {
        sb.append(this.resourceSpecification);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getPopularBuddyBanner_argsStandardSchemeFactory implements SchemeFactory {
      public getPopularBuddyBanner_argsStandardScheme getScheme() {
        return new getPopularBuddyBanner_argsStandardScheme();
      }
    }

    private static class getPopularBuddyBanner_argsStandardScheme extends StandardScheme<getPopularBuddyBanner_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getPopularBuddyBanner_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 2: // LANGUAGE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.language = iprot.readString();
                struct.setLanguageIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // COUNTRY
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.country = iprot.readString();
                struct.setCountryIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 4: // APPLICATION_TYPE
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.applicationType = ApplicationType.findByValue(iprot.readI32());
                struct.setApplicationTypeIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 5: // RESOURCE_SPECIFICATION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.resourceSpecification = iprot.readString();
                struct.setResourceSpecificationIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getPopularBuddyBanner_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.language != null) {
          oprot.writeFieldBegin(LANGUAGE_FIELD_DESC);
          oprot.writeString(struct.language);
          oprot.writeFieldEnd();
        }
        if (struct.country != null) {
          oprot.writeFieldBegin(COUNTRY_FIELD_DESC);
          oprot.writeString(struct.country);
          oprot.writeFieldEnd();
        }
        if (struct.applicationType != null) {
          oprot.writeFieldBegin(APPLICATION_TYPE_FIELD_DESC);
          oprot.writeI32(struct.applicationType.getValue());
          oprot.writeFieldEnd();
        }
        if (struct.resourceSpecification != null) {
          oprot.writeFieldBegin(RESOURCE_SPECIFICATION_FIELD_DESC);
          oprot.writeString(struct.resourceSpecification);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getPopularBuddyBanner_argsTupleSchemeFactory implements SchemeFactory {
      public getPopularBuddyBanner_argsTupleScheme getScheme() {
        return new getPopularBuddyBanner_argsTupleScheme();
      }
    }

    private static class getPopularBuddyBanner_argsTupleScheme extends TupleScheme<getPopularBuddyBanner_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getPopularBuddyBanner_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetLanguage()) {
          optionals.set(0);
        }
        if (struct.isSetCountry()) {
          optionals.set(1);
        }
        if (struct.isSetApplicationType()) {
          optionals.set(2);
        }
        if (struct.isSetResourceSpecification()) {
          optionals.set(3);
        }
        oprot.writeBitSet(optionals, 4);
        if (struct.isSetLanguage()) {
          oprot.writeString(struct.language);
        }
        if (struct.isSetCountry()) {
          oprot.writeString(struct.country);
        }
        if (struct.isSetApplicationType()) {
          oprot.writeI32(struct.applicationType.getValue());
        }
        if (struct.isSetResourceSpecification()) {
          oprot.writeString(struct.resourceSpecification);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getPopularBuddyBanner_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(4);
        if (incoming.get(0)) {
          struct.language = iprot.readString();
          struct.setLanguageIsSet(true);
        }
        if (incoming.get(1)) {
          struct.country = iprot.readString();
          struct.setCountryIsSet(true);
        }
        if (incoming.get(2)) {
          struct.applicationType = ApplicationType.findByValue(iprot.readI32());
          struct.setApplicationTypeIsSet(true);
        }
        if (incoming.get(3)) {
          struct.resourceSpecification = iprot.readString();
          struct.setResourceSpecificationIsSet(true);
        }
      }
    }

  }

  public static class getPopularBuddyBanner_result implements org.apache.thrift.TBase<getPopularBuddyBanner_result, getPopularBuddyBanner_result._Fields>, java.io.Serializable, Cloneable, Comparable<getPopularBuddyBanner_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getPopularBuddyBanner_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
    private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getPopularBuddyBanner_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getPopularBuddyBanner_resultTupleSchemeFactory());
    }

    private BuddyBanner success; // required
    private TalkException e; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      E((short)1, "e");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // E
            return E;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, BuddyBanner.class)));
      tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getPopularBuddyBanner_result.class, metaDataMap);
    }

    public getPopularBuddyBanner_result() {
    }

    public getPopularBuddyBanner_result(
      BuddyBanner success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getPopularBuddyBanner_result(getPopularBuddyBanner_result other) {
      if (other.isSetSuccess()) {
        this.success = new BuddyBanner(other.success);
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public getPopularBuddyBanner_result deepCopy() {
      return new getPopularBuddyBanner_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.e = null;
    }

    public BuddyBanner getSuccess() {
      return this.success;
    }

    public void setSuccess(BuddyBanner success) {
      this.success = success;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public void setE(TalkException e) {
      this.e = e;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((BuddyBanner)value);
        }
        break;

      case E:
        if (value == null) {
          unsetE();
        } else {
          setE((TalkException)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case E:
        return getE();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case E:
        return isSetE();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getPopularBuddyBanner_result)
        return this.equals((getPopularBuddyBanner_result)that);
      return false;
    }

    public boolean equals(getPopularBuddyBanner_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_e = true && (isSetE());
      list.add(present_e);
      if (present_e)
        list.add(e);

      return list.hashCode();
    }

    @Override
    public int compareTo(getPopularBuddyBanner_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetE()).compareTo(other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getPopularBuddyBanner_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getPopularBuddyBanner_resultStandardSchemeFactory implements SchemeFactory {
      public getPopularBuddyBanner_resultStandardScheme getScheme() {
        return new getPopularBuddyBanner_resultStandardScheme();
      }
    }

    private static class getPopularBuddyBanner_resultStandardScheme extends StandardScheme<getPopularBuddyBanner_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getPopularBuddyBanner_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new BuddyBanner();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // E
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.e = new TalkException();
                struct.e.read(iprot);
                struct.setEIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getPopularBuddyBanner_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.e != null) {
          oprot.writeFieldBegin(E_FIELD_DESC);
          struct.e.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getPopularBuddyBanner_resultTupleSchemeFactory implements SchemeFactory {
      public getPopularBuddyBanner_resultTupleScheme getScheme() {
        return new getPopularBuddyBanner_resultTupleScheme();
      }
    }

    private static class getPopularBuddyBanner_resultTupleScheme extends TupleScheme<getPopularBuddyBanner_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getPopularBuddyBanner_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetE()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
        if (struct.isSetE()) {
          struct.e.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getPopularBuddyBanner_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = new BuddyBanner();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.e = new TalkException();
          struct.e.read(iprot);
          struct.setEIsSet(true);
        }
      }
    }

  }

  public static class getPopularBuddyLists_args implements org.apache.thrift.TBase<getPopularBuddyLists_args, getPopularBuddyLists_args._Fields>, java.io.Serializable, Cloneable, Comparable<getPopularBuddyLists_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getPopularBuddyLists_args");

    private static final org.apache.thrift.protocol.TField LANGUAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("language", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField COUNTRY_FIELD_DESC = new org.apache.thrift.protocol.TField("country", org.apache.thrift.protocol.TType.STRING, (short)3);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getPopularBuddyLists_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getPopularBuddyLists_argsTupleSchemeFactory());
    }

    private String language; // required
    private String country; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      LANGUAGE((short)2, "language"),
      COUNTRY((short)3, "country");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 2: // LANGUAGE
            return LANGUAGE;
          case 3: // COUNTRY
            return COUNTRY;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.LANGUAGE, new org.apache.thrift.meta_data.FieldMetaData("language", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.COUNTRY, new org.apache.thrift.meta_data.FieldMetaData("country", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getPopularBuddyLists_args.class, metaDataMap);
    }

    public getPopularBuddyLists_args() {
    }

    public getPopularBuddyLists_args(
      String language,
      String country)
    {
      this();
      this.language = language;
      this.country = country;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getPopularBuddyLists_args(getPopularBuddyLists_args other) {
      if (other.isSetLanguage()) {
        this.language = other.language;
      }
      if (other.isSetCountry()) {
        this.country = other.country;
      }
    }

    public getPopularBuddyLists_args deepCopy() {
      return new getPopularBuddyLists_args(this);
    }

    @Override
    public void clear() {
      this.language = null;
      this.country = null;
    }

    public String getLanguage() {
      return this.language;
    }

    public void setLanguage(String language) {
      this.language = language;
    }

    public void unsetLanguage() {
      this.language = null;
    }

    /** Returns true if field language is set (has been assigned a value) and false otherwise */
    public boolean isSetLanguage() {
      return this.language != null;
    }

    public void setLanguageIsSet(boolean value) {
      if (!value) {
        this.language = null;
      }
    }

    public String getCountry() {
      return this.country;
    }

    public void setCountry(String country) {
      this.country = country;
    }

    public void unsetCountry() {
      this.country = null;
    }

    /** Returns true if field country is set (has been assigned a value) and false otherwise */
    public boolean isSetCountry() {
      return this.country != null;
    }

    public void setCountryIsSet(boolean value) {
      if (!value) {
        this.country = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case LANGUAGE:
        if (value == null) {
          unsetLanguage();
        } else {
          setLanguage((String)value);
        }
        break;

      case COUNTRY:
        if (value == null) {
          unsetCountry();
        } else {
          setCountry((String)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case LANGUAGE:
        return getLanguage();

      case COUNTRY:
        return getCountry();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case LANGUAGE:
        return isSetLanguage();
      case COUNTRY:
        return isSetCountry();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getPopularBuddyLists_args)
        return this.equals((getPopularBuddyLists_args)that);
      return false;
    }

    public boolean equals(getPopularBuddyLists_args that) {
      if (that == null)
        return false;

      boolean this_present_language = true && this.isSetLanguage();
      boolean that_present_language = true && that.isSetLanguage();
      if (this_present_language || that_present_language) {
        if (!(this_present_language && that_present_language))
          return false;
        if (!this.language.equals(that.language))
          return false;
      }

      boolean this_present_country = true && this.isSetCountry();
      boolean that_present_country = true && that.isSetCountry();
      if (this_present_country || that_present_country) {
        if (!(this_present_country && that_present_country))
          return false;
        if (!this.country.equals(that.country))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_language = true && (isSetLanguage());
      list.add(present_language);
      if (present_language)
        list.add(language);

      boolean present_country = true && (isSetCountry());
      list.add(present_country);
      if (present_country)
        list.add(country);

      return list.hashCode();
    }

    @Override
    public int compareTo(getPopularBuddyLists_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetLanguage()).compareTo(other.isSetLanguage());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetLanguage()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.language, other.language);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetCountry()).compareTo(other.isSetCountry());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCountry()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.country, other.country);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getPopularBuddyLists_args(");
      boolean first = true;

      sb.append("language:");
      if (this.language == null) {
        sb.append("null");
      } else {
        sb.append(this.language);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("country:");
      if (this.country == null) {
        sb.append("null");
      } else {
        sb.append(this.country);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getPopularBuddyLists_argsStandardSchemeFactory implements SchemeFactory {
      public getPopularBuddyLists_argsStandardScheme getScheme() {
        return new getPopularBuddyLists_argsStandardScheme();
      }
    }

    private static class getPopularBuddyLists_argsStandardScheme extends StandardScheme<getPopularBuddyLists_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getPopularBuddyLists_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 2: // LANGUAGE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.language = iprot.readString();
                struct.setLanguageIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // COUNTRY
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.country = iprot.readString();
                struct.setCountryIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getPopularBuddyLists_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.language != null) {
          oprot.writeFieldBegin(LANGUAGE_FIELD_DESC);
          oprot.writeString(struct.language);
          oprot.writeFieldEnd();
        }
        if (struct.country != null) {
          oprot.writeFieldBegin(COUNTRY_FIELD_DESC);
          oprot.writeString(struct.country);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getPopularBuddyLists_argsTupleSchemeFactory implements SchemeFactory {
      public getPopularBuddyLists_argsTupleScheme getScheme() {
        return new getPopularBuddyLists_argsTupleScheme();
      }
    }

    private static class getPopularBuddyLists_argsTupleScheme extends TupleScheme<getPopularBuddyLists_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getPopularBuddyLists_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetLanguage()) {
          optionals.set(0);
        }
        if (struct.isSetCountry()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetLanguage()) {
          oprot.writeString(struct.language);
        }
        if (struct.isSetCountry()) {
          oprot.writeString(struct.country);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getPopularBuddyLists_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.language = iprot.readString();
          struct.setLanguageIsSet(true);
        }
        if (incoming.get(1)) {
          struct.country = iprot.readString();
          struct.setCountryIsSet(true);
        }
      }
    }

  }

  public static class getPopularBuddyLists_result implements org.apache.thrift.TBase<getPopularBuddyLists_result, getPopularBuddyLists_result._Fields>, java.io.Serializable, Cloneable, Comparable<getPopularBuddyLists_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getPopularBuddyLists_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
    private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getPopularBuddyLists_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getPopularBuddyLists_resultTupleSchemeFactory());
    }

    private List<BuddyList> success; // required
    private TalkException e; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      E((short)1, "e");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // E
            return E;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, BuddyList.class))));
      tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getPopularBuddyLists_result.class, metaDataMap);
    }

    public getPopularBuddyLists_result() {
    }

    public getPopularBuddyLists_result(
      List<BuddyList> success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getPopularBuddyLists_result(getPopularBuddyLists_result other) {
      if (other.isSetSuccess()) {
        List<BuddyList> __this__success = new ArrayList<BuddyList>(other.success.size());
        for (BuddyList other_element : other.success) {
          __this__success.add(new BuddyList(other_element));
        }
        this.success = __this__success;
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public getPopularBuddyLists_result deepCopy() {
      return new getPopularBuddyLists_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.e = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public java.util.Iterator<BuddyList> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(BuddyList elem) {
      if (this.success == null) {
        this.success = new ArrayList<BuddyList>();
      }
      this.success.add(elem);
    }

    public List<BuddyList> getSuccess() {
      return this.success;
    }

    public void setSuccess(List<BuddyList> success) {
      this.success = success;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public void setE(TalkException e) {
      this.e = e;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((List<BuddyList>)value);
        }
        break;

      case E:
        if (value == null) {
          unsetE();
        } else {
          setE((TalkException)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case E:
        return getE();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case E:
        return isSetE();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getPopularBuddyLists_result)
        return this.equals((getPopularBuddyLists_result)that);
      return false;
    }

    public boolean equals(getPopularBuddyLists_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_e = true && (isSetE());
      list.add(present_e);
      if (present_e)
        list.add(e);

      return list.hashCode();
    }

    @Override
    public int compareTo(getPopularBuddyLists_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetE()).compareTo(other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getPopularBuddyLists_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getPopularBuddyLists_resultStandardSchemeFactory implements SchemeFactory {
      public getPopularBuddyLists_resultStandardScheme getScheme() {
        return new getPopularBuddyLists_resultStandardScheme();
      }
    }

    private static class getPopularBuddyLists_resultStandardScheme extends StandardScheme<getPopularBuddyLists_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getPopularBuddyLists_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list590 = iprot.readListBegin();
                  struct.success = new ArrayList<BuddyList>(_list590.size);
                  BuddyList _elem591;
                  for (int _i592 = 0; _i592 < _list590.size; ++_i592)
                  {
                    _elem591 = new BuddyList();
                    _elem591.read(iprot);
                    struct.success.add(_elem591);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // E
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.e = new TalkException();
                struct.e.read(iprot);
                struct.setEIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getPopularBuddyLists_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (BuddyList _iter593 : struct.success)
            {
              _iter593.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        if (struct.e != null) {
          oprot.writeFieldBegin(E_FIELD_DESC);
          struct.e.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getPopularBuddyLists_resultTupleSchemeFactory implements SchemeFactory {
      public getPopularBuddyLists_resultTupleScheme getScheme() {
        return new getPopularBuddyLists_resultTupleScheme();
      }
    }

    private static class getPopularBuddyLists_resultTupleScheme extends TupleScheme<getPopularBuddyLists_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getPopularBuddyLists_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetE()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (BuddyList _iter594 : struct.success)
            {
              _iter594.write(oprot);
            }
          }
        }
        if (struct.isSetE()) {
          struct.e.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getPopularBuddyLists_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list595 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new ArrayList<BuddyList>(_list595.size);
            BuddyList _elem596;
            for (int _i597 = 0; _i597 < _list595.size; ++_i597)
            {
              _elem596 = new BuddyList();
              _elem596.read(iprot);
              struct.success.add(_elem596);
            }
          }
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.e = new TalkException();
          struct.e.read(iprot);
          struct.setEIsSet(true);
        }
      }
    }

  }

  public static class getPromotedBuddyContacts_args implements org.apache.thrift.TBase<getPromotedBuddyContacts_args, getPromotedBuddyContacts_args._Fields>, java.io.Serializable, Cloneable, Comparable<getPromotedBuddyContacts_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getPromotedBuddyContacts_args");

    private static final org.apache.thrift.protocol.TField LANGUAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("language", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField COUNTRY_FIELD_DESC = new org.apache.thrift.protocol.TField("country", org.apache.thrift.protocol.TType.STRING, (short)3);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getPromotedBuddyContacts_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getPromotedBuddyContacts_argsTupleSchemeFactory());
    }

    private String language; // required
    private String country; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      LANGUAGE((short)2, "language"),
      COUNTRY((short)3, "country");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 2: // LANGUAGE
            return LANGUAGE;
          case 3: // COUNTRY
            return COUNTRY;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.LANGUAGE, new org.apache.thrift.meta_data.FieldMetaData("language", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.COUNTRY, new org.apache.thrift.meta_data.FieldMetaData("country", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getPromotedBuddyContacts_args.class, metaDataMap);
    }

    public getPromotedBuddyContacts_args() {
    }

    public getPromotedBuddyContacts_args(
      String language,
      String country)
    {
      this();
      this.language = language;
      this.country = country;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getPromotedBuddyContacts_args(getPromotedBuddyContacts_args other) {
      if (other.isSetLanguage()) {
        this.language = other.language;
      }
      if (other.isSetCountry()) {
        this.country = other.country;
      }
    }

    public getPromotedBuddyContacts_args deepCopy() {
      return new getPromotedBuddyContacts_args(this);
    }

    @Override
    public void clear() {
      this.language = null;
      this.country = null;
    }

    public String getLanguage() {
      return this.language;
    }

    public void setLanguage(String language) {
      this.language = language;
    }

    public void unsetLanguage() {
      this.language = null;
    }

    /** Returns true if field language is set (has been assigned a value) and false otherwise */
    public boolean isSetLanguage() {
      return this.language != null;
    }

    public void setLanguageIsSet(boolean value) {
      if (!value) {
        this.language = null;
      }
    }

    public String getCountry() {
      return this.country;
    }

    public void setCountry(String country) {
      this.country = country;
    }

    public void unsetCountry() {
      this.country = null;
    }

    /** Returns true if field country is set (has been assigned a value) and false otherwise */
    public boolean isSetCountry() {
      return this.country != null;
    }

    public void setCountryIsSet(boolean value) {
      if (!value) {
        this.country = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case LANGUAGE:
        if (value == null) {
          unsetLanguage();
        } else {
          setLanguage((String)value);
        }
        break;

      case COUNTRY:
        if (value == null) {
          unsetCountry();
        } else {
          setCountry((String)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case LANGUAGE:
        return getLanguage();

      case COUNTRY:
        return getCountry();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case LANGUAGE:
        return isSetLanguage();
      case COUNTRY:
        return isSetCountry();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getPromotedBuddyContacts_args)
        return this.equals((getPromotedBuddyContacts_args)that);
      return false;
    }

    public boolean equals(getPromotedBuddyContacts_args that) {
      if (that == null)
        return false;

      boolean this_present_language = true && this.isSetLanguage();
      boolean that_present_language = true && that.isSetLanguage();
      if (this_present_language || that_present_language) {
        if (!(this_present_language && that_present_language))
          return false;
        if (!this.language.equals(that.language))
          return false;
      }

      boolean this_present_country = true && this.isSetCountry();
      boolean that_present_country = true && that.isSetCountry();
      if (this_present_country || that_present_country) {
        if (!(this_present_country && that_present_country))
          return false;
        if (!this.country.equals(that.country))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_language = true && (isSetLanguage());
      list.add(present_language);
      if (present_language)
        list.add(language);

      boolean present_country = true && (isSetCountry());
      list.add(present_country);
      if (present_country)
        list.add(country);

      return list.hashCode();
    }

    @Override
    public int compareTo(getPromotedBuddyContacts_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetLanguage()).compareTo(other.isSetLanguage());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetLanguage()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.language, other.language);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetCountry()).compareTo(other.isSetCountry());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCountry()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.country, other.country);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getPromotedBuddyContacts_args(");
      boolean first = true;

      sb.append("language:");
      if (this.language == null) {
        sb.append("null");
      } else {
        sb.append(this.language);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("country:");
      if (this.country == null) {
        sb.append("null");
      } else {
        sb.append(this.country);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getPromotedBuddyContacts_argsStandardSchemeFactory implements SchemeFactory {
      public getPromotedBuddyContacts_argsStandardScheme getScheme() {
        return new getPromotedBuddyContacts_argsStandardScheme();
      }
    }

    private static class getPromotedBuddyContacts_argsStandardScheme extends StandardScheme<getPromotedBuddyContacts_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getPromotedBuddyContacts_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 2: // LANGUAGE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.language = iprot.readString();
                struct.setLanguageIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // COUNTRY
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.country = iprot.readString();
                struct.setCountryIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getPromotedBuddyContacts_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.language != null) {
          oprot.writeFieldBegin(LANGUAGE_FIELD_DESC);
          oprot.writeString(struct.language);
          oprot.writeFieldEnd();
        }
        if (struct.country != null) {
          oprot.writeFieldBegin(COUNTRY_FIELD_DESC);
          oprot.writeString(struct.country);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getPromotedBuddyContacts_argsTupleSchemeFactory implements SchemeFactory {
      public getPromotedBuddyContacts_argsTupleScheme getScheme() {
        return new getPromotedBuddyContacts_argsTupleScheme();
      }
    }

    private static class getPromotedBuddyContacts_argsTupleScheme extends TupleScheme<getPromotedBuddyContacts_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getPromotedBuddyContacts_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetLanguage()) {
          optionals.set(0);
        }
        if (struct.isSetCountry()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetLanguage()) {
          oprot.writeString(struct.language);
        }
        if (struct.isSetCountry()) {
          oprot.writeString(struct.country);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getPromotedBuddyContacts_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.language = iprot.readString();
          struct.setLanguageIsSet(true);
        }
        if (incoming.get(1)) {
          struct.country = iprot.readString();
          struct.setCountryIsSet(true);
        }
      }
    }

  }

  public static class getPromotedBuddyContacts_result implements org.apache.thrift.TBase<getPromotedBuddyContacts_result, getPromotedBuddyContacts_result._Fields>, java.io.Serializable, Cloneable, Comparable<getPromotedBuddyContacts_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getPromotedBuddyContacts_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
    private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new getPromotedBuddyContacts_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new getPromotedBuddyContacts_resultTupleSchemeFactory());
    }

    private List<Contact> success; // required
    private TalkException e; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      E((short)1, "e");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // E
            return E;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Contact.class))));
      tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getPromotedBuddyContacts_result.class, metaDataMap);
    }

    public getPromotedBuddyContacts_result() {
    }

    public getPromotedBuddyContacts_result(
      List<Contact> success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getPromotedBuddyContacts_result(getPromotedBuddyContacts_result other) {
      if (other.isSetSuccess()) {
        List<Contact> __this__success = new ArrayList<Contact>(other.success.size());
        for (Contact other_element : other.success) {
          __this__success.add(new Contact(other_element));
        }
        this.success = __this__success;
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public getPromotedBuddyContacts_result deepCopy() {
      return new getPromotedBuddyContacts_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.e = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public java.util.Iterator<Contact> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(Contact elem) {
      if (this.success == null) {
        this.success = new ArrayList<Contact>();
      }
      this.success.add(elem);
    }

    public List<Contact> getSuccess() {
      return this.success;
    }

    public void setSuccess(List<Contact> success) {
      this.success = success;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public void setE(TalkException e) {
      this.e = e;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((List<Contact>)value);
        }
        break;

      case E:
        if (value == null) {
          unsetE();
        } else {
          setE((TalkException)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case E:
        return getE();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case E:
        return isSetE();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getPromotedBuddyContacts_result)
        return this.equals((getPromotedBuddyContacts_result)that);
      return false;
    }

    public boolean equals(getPromotedBuddyContacts_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      boolean present_e = true && (isSetE());
      list.add(present_e);
      if (present_e)
        list.add(e);

      return list.hashCode();
    }

    @Override
    public int compareTo(getPromotedBuddyContacts_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetE()).compareTo(other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("getPromotedBuddyContacts_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getPromotedBuddyContacts_resultStandardSchemeFactory implements SchemeFactory {
      public getPromotedBuddyContacts_resultStandardScheme getScheme() {
        return new getPromotedBuddyContacts_resultStandardScheme();
      }
    }

    private static class getPromotedBuddyContacts_resultStandardScheme extends StandardScheme<getPromotedBuddyContacts_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getPromotedBuddyContacts_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list598 = iprot.readListBegin();
                  struct.success = new ArrayList<Contact>(_list598.size);
                  Contact _elem599;
                  for (int _i600 = 0; _i600 < _list598.size; ++_i600)
                  {
                    _elem599 = new Contact();
                    _elem599.read(iprot);
                    struct.success.add(_elem599);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // E
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.e = new TalkException();
                struct.e.read(iprot);
                struct.setEIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getPromotedBuddyContacts_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (Contact _iter601 : struct.success)
            {
              _iter601.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        if (struct.e != null) {
          oprot.writeFieldBegin(E_FIELD_DESC);
          struct.e.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getPromotedBuddyContacts_resultTupleSchemeFactory implements SchemeFactory {
      public getPromotedBuddyContacts_resultTupleScheme getScheme() {
        return new getPromotedBuddyContacts_resultTupleScheme();
      }
    }

    private static class getPromotedBuddyContacts_resultTupleScheme extends TupleScheme<getPromotedBuddyContacts_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getPromotedBuddyContacts_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetE()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (Contact _iter602 : struct.success)
            {
              _iter602.write(oprot);
            }
          }
        }
        if (struct.isSetE()) {
          struct.e.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getPromotedBuddyContacts_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list603 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new ArrayList<Contact>(_list603.size);
            Contact _elem604;
            for (int _i605 = 0; _i605 < _list603.size; ++_i605)
            {
              _elem604 = new Contact();
              _elem604.read(iprot);
              struct.success.add(_elem604);
            }
          }
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.e = new TalkException();
          struct.e.read(iprot);
          struct.setEIsSet(true);
        }
      }
    }

  }

}
