/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.linecorp.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2017-04-08")
public class Product implements org.apache.thrift.TBase<Product, Product._Fields>, java.io.Serializable, Cloneable, Comparable<Product> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Product");

  private static final org.apache.thrift.protocol.TField PRODUCT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("productId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField PACKAGE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("packageId", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("version", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField AUTHOR_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("authorName", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ON_SALE_FIELD_DESC = new org.apache.thrift.protocol.TField("onSale", org.apache.thrift.protocol.TType.BOOL, (short)5);
  private static final org.apache.thrift.protocol.TField VALID_DAYS_FIELD_DESC = new org.apache.thrift.protocol.TField("validDays", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField SALE_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("saleType", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField COPYRIGHT_FIELD_DESC = new org.apache.thrift.protocol.TField("copyright", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("title", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_TEXT_FIELD_DESC = new org.apache.thrift.protocol.TField("descriptionText", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField SHOP_ORDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("shopOrderId", org.apache.thrift.protocol.TType.I64, (short)11);
  private static final org.apache.thrift.protocol.TField FROM_MID_FIELD_DESC = new org.apache.thrift.protocol.TField("fromMid", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField TO_MID_FIELD_DESC = new org.apache.thrift.protocol.TField("toMid", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField VALID_UNTIL_FIELD_DESC = new org.apache.thrift.protocol.TField("validUntil", org.apache.thrift.protocol.TType.I64, (short)14);
  private static final org.apache.thrift.protocol.TField PRICE_TIER_FIELD_DESC = new org.apache.thrift.protocol.TField("priceTier", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("price", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField CURRENCY_FIELD_DESC = new org.apache.thrift.protocol.TField("currency", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField CURRENCY_SYMBOL_FIELD_DESC = new org.apache.thrift.protocol.TField("currencySymbol", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField PAYMENT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("paymentType", org.apache.thrift.protocol.TType.I32, (short)19);
  private static final org.apache.thrift.protocol.TField CREATE_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("createDate", org.apache.thrift.protocol.TType.I64, (short)20);
  private static final org.apache.thrift.protocol.TField OWN_FLAG_FIELD_DESC = new org.apache.thrift.protocol.TField("ownFlag", org.apache.thrift.protocol.TType.BOOL, (short)21);
  private static final org.apache.thrift.protocol.TField EVENT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("eventType", org.apache.thrift.protocol.TType.I32, (short)22);
  private static final org.apache.thrift.protocol.TField URL_SCHEMA_FIELD_DESC = new org.apache.thrift.protocol.TField("urlSchema", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField DOWNLOAD_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("downloadUrl", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField BUDDY_MID_FIELD_DESC = new org.apache.thrift.protocol.TField("buddyMid", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField PUBLISH_SINCE_FIELD_DESC = new org.apache.thrift.protocol.TField("publishSince", org.apache.thrift.protocol.TType.I64, (short)26);
  private static final org.apache.thrift.protocol.TField NEW_FLAG_FIELD_DESC = new org.apache.thrift.protocol.TField("newFlag", org.apache.thrift.protocol.TType.BOOL, (short)27);
  private static final org.apache.thrift.protocol.TField MISSION_FLAG_FIELD_DESC = new org.apache.thrift.protocol.TField("missionFlag", org.apache.thrift.protocol.TType.BOOL, (short)28);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ProductStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ProductTupleSchemeFactory());
  }

  private String productId; // required
  private long packageId; // required
  private int version; // required
  private String authorName; // required
  private boolean onSale; // required
  private int validDays; // required
  private int saleType; // required
  private String copyright; // required
  private String title; // required
  private String descriptionText; // required
  private long shopOrderId; // required
  private String fromMid; // required
  private String toMid; // required
  private long validUntil; // required
  private int priceTier; // required
  private String price; // required
  private String currency; // required
  private String currencySymbol; // required
  private PaymentType paymentType; // required
  private long createDate; // required
  private boolean ownFlag; // required
  private ProductEventType eventType; // required
  private String urlSchema; // required
  private String downloadUrl; // required
  private String buddyMid; // required
  private long publishSince; // required
  private boolean newFlag; // required
  private boolean missionFlag; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PRODUCT_ID((short)1, "productId"),
    PACKAGE_ID((short)2, "packageId"),
    VERSION((short)3, "version"),
    AUTHOR_NAME((short)4, "authorName"),
    ON_SALE((short)5, "onSale"),
    VALID_DAYS((short)6, "validDays"),
    SALE_TYPE((short)7, "saleType"),
    COPYRIGHT((short)8, "copyright"),
    TITLE((short)9, "title"),
    DESCRIPTION_TEXT((short)10, "descriptionText"),
    SHOP_ORDER_ID((short)11, "shopOrderId"),
    FROM_MID((short)12, "fromMid"),
    TO_MID((short)13, "toMid"),
    VALID_UNTIL((short)14, "validUntil"),
    PRICE_TIER((short)15, "priceTier"),
    PRICE((short)16, "price"),
    CURRENCY((short)17, "currency"),
    CURRENCY_SYMBOL((short)18, "currencySymbol"),
    /**
     * 
     * @see PaymentType
     */
    PAYMENT_TYPE((short)19, "paymentType"),
    CREATE_DATE((short)20, "createDate"),
    OWN_FLAG((short)21, "ownFlag"),
    /**
     * 
     * @see ProductEventType
     */
    EVENT_TYPE((short)22, "eventType"),
    URL_SCHEMA((short)23, "urlSchema"),
    DOWNLOAD_URL((short)24, "downloadUrl"),
    BUDDY_MID((short)25, "buddyMid"),
    PUBLISH_SINCE((short)26, "publishSince"),
    NEW_FLAG((short)27, "newFlag"),
    MISSION_FLAG((short)28, "missionFlag");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PRODUCT_ID
          return PRODUCT_ID;
        case 2: // PACKAGE_ID
          return PACKAGE_ID;
        case 3: // VERSION
          return VERSION;
        case 4: // AUTHOR_NAME
          return AUTHOR_NAME;
        case 5: // ON_SALE
          return ON_SALE;
        case 6: // VALID_DAYS
          return VALID_DAYS;
        case 7: // SALE_TYPE
          return SALE_TYPE;
        case 8: // COPYRIGHT
          return COPYRIGHT;
        case 9: // TITLE
          return TITLE;
        case 10: // DESCRIPTION_TEXT
          return DESCRIPTION_TEXT;
        case 11: // SHOP_ORDER_ID
          return SHOP_ORDER_ID;
        case 12: // FROM_MID
          return FROM_MID;
        case 13: // TO_MID
          return TO_MID;
        case 14: // VALID_UNTIL
          return VALID_UNTIL;
        case 15: // PRICE_TIER
          return PRICE_TIER;
        case 16: // PRICE
          return PRICE;
        case 17: // CURRENCY
          return CURRENCY;
        case 18: // CURRENCY_SYMBOL
          return CURRENCY_SYMBOL;
        case 19: // PAYMENT_TYPE
          return PAYMENT_TYPE;
        case 20: // CREATE_DATE
          return CREATE_DATE;
        case 21: // OWN_FLAG
          return OWN_FLAG;
        case 22: // EVENT_TYPE
          return EVENT_TYPE;
        case 23: // URL_SCHEMA
          return URL_SCHEMA;
        case 24: // DOWNLOAD_URL
          return DOWNLOAD_URL;
        case 25: // BUDDY_MID
          return BUDDY_MID;
        case 26: // PUBLISH_SINCE
          return PUBLISH_SINCE;
        case 27: // NEW_FLAG
          return NEW_FLAG;
        case 28: // MISSION_FLAG
          return MISSION_FLAG;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PACKAGEID_ISSET_ID = 0;
  private static final int __VERSION_ISSET_ID = 1;
  private static final int __ONSALE_ISSET_ID = 2;
  private static final int __VALIDDAYS_ISSET_ID = 3;
  private static final int __SALETYPE_ISSET_ID = 4;
  private static final int __SHOPORDERID_ISSET_ID = 5;
  private static final int __VALIDUNTIL_ISSET_ID = 6;
  private static final int __PRICETIER_ISSET_ID = 7;
  private static final int __CREATEDATE_ISSET_ID = 8;
  private static final int __OWNFLAG_ISSET_ID = 9;
  private static final int __PUBLISHSINCE_ISSET_ID = 10;
  private static final int __NEWFLAG_ISSET_ID = 11;
  private static final int __MISSIONFLAG_ISSET_ID = 12;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PRODUCT_ID, new org.apache.thrift.meta_data.FieldMetaData("productId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PACKAGE_ID, new org.apache.thrift.meta_data.FieldMetaData("packageId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.VERSION, new org.apache.thrift.meta_data.FieldMetaData("version", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.AUTHOR_NAME, new org.apache.thrift.meta_data.FieldMetaData("authorName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ON_SALE, new org.apache.thrift.meta_data.FieldMetaData("onSale", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.VALID_DAYS, new org.apache.thrift.meta_data.FieldMetaData("validDays", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SALE_TYPE, new org.apache.thrift.meta_data.FieldMetaData("saleType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COPYRIGHT, new org.apache.thrift.meta_data.FieldMetaData("copyright", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TITLE, new org.apache.thrift.meta_data.FieldMetaData("title", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCRIPTION_TEXT, new org.apache.thrift.meta_data.FieldMetaData("descriptionText", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SHOP_ORDER_ID, new org.apache.thrift.meta_data.FieldMetaData("shopOrderId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.FROM_MID, new org.apache.thrift.meta_data.FieldMetaData("fromMid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TO_MID, new org.apache.thrift.meta_data.FieldMetaData("toMid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALID_UNTIL, new org.apache.thrift.meta_data.FieldMetaData("validUntil", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PRICE_TIER, new org.apache.thrift.meta_data.FieldMetaData("priceTier", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PRICE, new org.apache.thrift.meta_data.FieldMetaData("price", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CURRENCY, new org.apache.thrift.meta_data.FieldMetaData("currency", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CURRENCY_SYMBOL, new org.apache.thrift.meta_data.FieldMetaData("currencySymbol", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAYMENT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("paymentType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, PaymentType.class)));
    tmpMap.put(_Fields.CREATE_DATE, new org.apache.thrift.meta_data.FieldMetaData("createDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.OWN_FLAG, new org.apache.thrift.meta_data.FieldMetaData("ownFlag", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.EVENT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("eventType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, ProductEventType.class)));
    tmpMap.put(_Fields.URL_SCHEMA, new org.apache.thrift.meta_data.FieldMetaData("urlSchema", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DOWNLOAD_URL, new org.apache.thrift.meta_data.FieldMetaData("downloadUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUDDY_MID, new org.apache.thrift.meta_data.FieldMetaData("buddyMid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PUBLISH_SINCE, new org.apache.thrift.meta_data.FieldMetaData("publishSince", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NEW_FLAG, new org.apache.thrift.meta_data.FieldMetaData("newFlag", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.MISSION_FLAG, new org.apache.thrift.meta_data.FieldMetaData("missionFlag", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Product.class, metaDataMap);
  }

  public Product() {
  }

  public Product(
    String productId,
    long packageId,
    int version,
    String authorName,
    boolean onSale,
    int validDays,
    int saleType,
    String copyright,
    String title,
    String descriptionText,
    long shopOrderId,
    String fromMid,
    String toMid,
    long validUntil,
    int priceTier,
    String price,
    String currency,
    String currencySymbol,
    PaymentType paymentType,
    long createDate,
    boolean ownFlag,
    ProductEventType eventType,
    String urlSchema,
    String downloadUrl,
    String buddyMid,
    long publishSince,
    boolean newFlag,
    boolean missionFlag)
  {
    this();
    this.productId = productId;
    this.packageId = packageId;
    setPackageIdIsSet(true);
    this.version = version;
    setVersionIsSet(true);
    this.authorName = authorName;
    this.onSale = onSale;
    setOnSaleIsSet(true);
    this.validDays = validDays;
    setValidDaysIsSet(true);
    this.saleType = saleType;
    setSaleTypeIsSet(true);
    this.copyright = copyright;
    this.title = title;
    this.descriptionText = descriptionText;
    this.shopOrderId = shopOrderId;
    setShopOrderIdIsSet(true);
    this.fromMid = fromMid;
    this.toMid = toMid;
    this.validUntil = validUntil;
    setValidUntilIsSet(true);
    this.priceTier = priceTier;
    setPriceTierIsSet(true);
    this.price = price;
    this.currency = currency;
    this.currencySymbol = currencySymbol;
    this.paymentType = paymentType;
    this.createDate = createDate;
    setCreateDateIsSet(true);
    this.ownFlag = ownFlag;
    setOwnFlagIsSet(true);
    this.eventType = eventType;
    this.urlSchema = urlSchema;
    this.downloadUrl = downloadUrl;
    this.buddyMid = buddyMid;
    this.publishSince = publishSince;
    setPublishSinceIsSet(true);
    this.newFlag = newFlag;
    setNewFlagIsSet(true);
    this.missionFlag = missionFlag;
    setMissionFlagIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Product(Product other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetProductId()) {
      this.productId = other.productId;
    }
    this.packageId = other.packageId;
    this.version = other.version;
    if (other.isSetAuthorName()) {
      this.authorName = other.authorName;
    }
    this.onSale = other.onSale;
    this.validDays = other.validDays;
    this.saleType = other.saleType;
    if (other.isSetCopyright()) {
      this.copyright = other.copyright;
    }
    if (other.isSetTitle()) {
      this.title = other.title;
    }
    if (other.isSetDescriptionText()) {
      this.descriptionText = other.descriptionText;
    }
    this.shopOrderId = other.shopOrderId;
    if (other.isSetFromMid()) {
      this.fromMid = other.fromMid;
    }
    if (other.isSetToMid()) {
      this.toMid = other.toMid;
    }
    this.validUntil = other.validUntil;
    this.priceTier = other.priceTier;
    if (other.isSetPrice()) {
      this.price = other.price;
    }
    if (other.isSetCurrency()) {
      this.currency = other.currency;
    }
    if (other.isSetCurrencySymbol()) {
      this.currencySymbol = other.currencySymbol;
    }
    if (other.isSetPaymentType()) {
      this.paymentType = other.paymentType;
    }
    this.createDate = other.createDate;
    this.ownFlag = other.ownFlag;
    if (other.isSetEventType()) {
      this.eventType = other.eventType;
    }
    if (other.isSetUrlSchema()) {
      this.urlSchema = other.urlSchema;
    }
    if (other.isSetDownloadUrl()) {
      this.downloadUrl = other.downloadUrl;
    }
    if (other.isSetBuddyMid()) {
      this.buddyMid = other.buddyMid;
    }
    this.publishSince = other.publishSince;
    this.newFlag = other.newFlag;
    this.missionFlag = other.missionFlag;
  }

  public Product deepCopy() {
    return new Product(this);
  }

  @Override
  public void clear() {
    this.productId = null;
    setPackageIdIsSet(false);
    this.packageId = 0;
    setVersionIsSet(false);
    this.version = 0;
    this.authorName = null;
    setOnSaleIsSet(false);
    this.onSale = false;
    setValidDaysIsSet(false);
    this.validDays = 0;
    setSaleTypeIsSet(false);
    this.saleType = 0;
    this.copyright = null;
    this.title = null;
    this.descriptionText = null;
    setShopOrderIdIsSet(false);
    this.shopOrderId = 0;
    this.fromMid = null;
    this.toMid = null;
    setValidUntilIsSet(false);
    this.validUntil = 0;
    setPriceTierIsSet(false);
    this.priceTier = 0;
    this.price = null;
    this.currency = null;
    this.currencySymbol = null;
    this.paymentType = null;
    setCreateDateIsSet(false);
    this.createDate = 0;
    setOwnFlagIsSet(false);
    this.ownFlag = false;
    this.eventType = null;
    this.urlSchema = null;
    this.downloadUrl = null;
    this.buddyMid = null;
    setPublishSinceIsSet(false);
    this.publishSince = 0;
    setNewFlagIsSet(false);
    this.newFlag = false;
    setMissionFlagIsSet(false);
    this.missionFlag = false;
  }

  public String getProductId() {
    return this.productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }

  public void unsetProductId() {
    this.productId = null;
  }

  /** Returns true if field productId is set (has been assigned a value) and false otherwise */
  public boolean isSetProductId() {
    return this.productId != null;
  }

  public void setProductIdIsSet(boolean value) {
    if (!value) {
      this.productId = null;
    }
  }

  public long getPackageId() {
    return this.packageId;
  }

  public void setPackageId(long packageId) {
    this.packageId = packageId;
    setPackageIdIsSet(true);
  }

  public void unsetPackageId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PACKAGEID_ISSET_ID);
  }

  /** Returns true if field packageId is set (has been assigned a value) and false otherwise */
  public boolean isSetPackageId() {
    return EncodingUtils.testBit(__isset_bitfield, __PACKAGEID_ISSET_ID);
  }

  public void setPackageIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PACKAGEID_ISSET_ID, value);
  }

  public int getVersion() {
    return this.version;
  }

  public void setVersion(int version) {
    this.version = version;
    setVersionIsSet(true);
  }

  public void unsetVersion() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VERSION_ISSET_ID);
  }

  /** Returns true if field version is set (has been assigned a value) and false otherwise */
  public boolean isSetVersion() {
    return EncodingUtils.testBit(__isset_bitfield, __VERSION_ISSET_ID);
  }

  public void setVersionIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VERSION_ISSET_ID, value);
  }

  public String getAuthorName() {
    return this.authorName;
  }

  public void setAuthorName(String authorName) {
    this.authorName = authorName;
  }

  public void unsetAuthorName() {
    this.authorName = null;
  }

  /** Returns true if field authorName is set (has been assigned a value) and false otherwise */
  public boolean isSetAuthorName() {
    return this.authorName != null;
  }

  public void setAuthorNameIsSet(boolean value) {
    if (!value) {
      this.authorName = null;
    }
  }

  public boolean isOnSale() {
    return this.onSale;
  }

  public void setOnSale(boolean onSale) {
    this.onSale = onSale;
    setOnSaleIsSet(true);
  }

  public void unsetOnSale() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ONSALE_ISSET_ID);
  }

  /** Returns true if field onSale is set (has been assigned a value) and false otherwise */
  public boolean isSetOnSale() {
    return EncodingUtils.testBit(__isset_bitfield, __ONSALE_ISSET_ID);
  }

  public void setOnSaleIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ONSALE_ISSET_ID, value);
  }

  public int getValidDays() {
    return this.validDays;
  }

  public void setValidDays(int validDays) {
    this.validDays = validDays;
    setValidDaysIsSet(true);
  }

  public void unsetValidDays() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VALIDDAYS_ISSET_ID);
  }

  /** Returns true if field validDays is set (has been assigned a value) and false otherwise */
  public boolean isSetValidDays() {
    return EncodingUtils.testBit(__isset_bitfield, __VALIDDAYS_ISSET_ID);
  }

  public void setValidDaysIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VALIDDAYS_ISSET_ID, value);
  }

  public int getSaleType() {
    return this.saleType;
  }

  public void setSaleType(int saleType) {
    this.saleType = saleType;
    setSaleTypeIsSet(true);
  }

  public void unsetSaleType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SALETYPE_ISSET_ID);
  }

  /** Returns true if field saleType is set (has been assigned a value) and false otherwise */
  public boolean isSetSaleType() {
    return EncodingUtils.testBit(__isset_bitfield, __SALETYPE_ISSET_ID);
  }

  public void setSaleTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SALETYPE_ISSET_ID, value);
  }

  public String getCopyright() {
    return this.copyright;
  }

  public void setCopyright(String copyright) {
    this.copyright = copyright;
  }

  public void unsetCopyright() {
    this.copyright = null;
  }

  /** Returns true if field copyright is set (has been assigned a value) and false otherwise */
  public boolean isSetCopyright() {
    return this.copyright != null;
  }

  public void setCopyrightIsSet(boolean value) {
    if (!value) {
      this.copyright = null;
    }
  }

  public String getTitle() {
    return this.title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public void unsetTitle() {
    this.title = null;
  }

  /** Returns true if field title is set (has been assigned a value) and false otherwise */
  public boolean isSetTitle() {
    return this.title != null;
  }

  public void setTitleIsSet(boolean value) {
    if (!value) {
      this.title = null;
    }
  }

  public String getDescriptionText() {
    return this.descriptionText;
  }

  public void setDescriptionText(String descriptionText) {
    this.descriptionText = descriptionText;
  }

  public void unsetDescriptionText() {
    this.descriptionText = null;
  }

  /** Returns true if field descriptionText is set (has been assigned a value) and false otherwise */
  public boolean isSetDescriptionText() {
    return this.descriptionText != null;
  }

  public void setDescriptionTextIsSet(boolean value) {
    if (!value) {
      this.descriptionText = null;
    }
  }

  public long getShopOrderId() {
    return this.shopOrderId;
  }

  public void setShopOrderId(long shopOrderId) {
    this.shopOrderId = shopOrderId;
    setShopOrderIdIsSet(true);
  }

  public void unsetShopOrderId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SHOPORDERID_ISSET_ID);
  }

  /** Returns true if field shopOrderId is set (has been assigned a value) and false otherwise */
  public boolean isSetShopOrderId() {
    return EncodingUtils.testBit(__isset_bitfield, __SHOPORDERID_ISSET_ID);
  }

  public void setShopOrderIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SHOPORDERID_ISSET_ID, value);
  }

  public String getFromMid() {
    return this.fromMid;
  }

  public void setFromMid(String fromMid) {
    this.fromMid = fromMid;
  }

  public void unsetFromMid() {
    this.fromMid = null;
  }

  /** Returns true if field fromMid is set (has been assigned a value) and false otherwise */
  public boolean isSetFromMid() {
    return this.fromMid != null;
  }

  public void setFromMidIsSet(boolean value) {
    if (!value) {
      this.fromMid = null;
    }
  }

  public String getToMid() {
    return this.toMid;
  }

  public void setToMid(String toMid) {
    this.toMid = toMid;
  }

  public void unsetToMid() {
    this.toMid = null;
  }

  /** Returns true if field toMid is set (has been assigned a value) and false otherwise */
  public boolean isSetToMid() {
    return this.toMid != null;
  }

  public void setToMidIsSet(boolean value) {
    if (!value) {
      this.toMid = null;
    }
  }

  public long getValidUntil() {
    return this.validUntil;
  }

  public void setValidUntil(long validUntil) {
    this.validUntil = validUntil;
    setValidUntilIsSet(true);
  }

  public void unsetValidUntil() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VALIDUNTIL_ISSET_ID);
  }

  /** Returns true if field validUntil is set (has been assigned a value) and false otherwise */
  public boolean isSetValidUntil() {
    return EncodingUtils.testBit(__isset_bitfield, __VALIDUNTIL_ISSET_ID);
  }

  public void setValidUntilIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VALIDUNTIL_ISSET_ID, value);
  }

  public int getPriceTier() {
    return this.priceTier;
  }

  public void setPriceTier(int priceTier) {
    this.priceTier = priceTier;
    setPriceTierIsSet(true);
  }

  public void unsetPriceTier() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PRICETIER_ISSET_ID);
  }

  /** Returns true if field priceTier is set (has been assigned a value) and false otherwise */
  public boolean isSetPriceTier() {
    return EncodingUtils.testBit(__isset_bitfield, __PRICETIER_ISSET_ID);
  }

  public void setPriceTierIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PRICETIER_ISSET_ID, value);
  }

  public String getPrice() {
    return this.price;
  }

  public void setPrice(String price) {
    this.price = price;
  }

  public void unsetPrice() {
    this.price = null;
  }

  /** Returns true if field price is set (has been assigned a value) and false otherwise */
  public boolean isSetPrice() {
    return this.price != null;
  }

  public void setPriceIsSet(boolean value) {
    if (!value) {
      this.price = null;
    }
  }

  public String getCurrency() {
    return this.currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public void unsetCurrency() {
    this.currency = null;
  }

  /** Returns true if field currency is set (has been assigned a value) and false otherwise */
  public boolean isSetCurrency() {
    return this.currency != null;
  }

  public void setCurrencyIsSet(boolean value) {
    if (!value) {
      this.currency = null;
    }
  }

  public String getCurrencySymbol() {
    return this.currencySymbol;
  }

  public void setCurrencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
  }

  public void unsetCurrencySymbol() {
    this.currencySymbol = null;
  }

  /** Returns true if field currencySymbol is set (has been assigned a value) and false otherwise */
  public boolean isSetCurrencySymbol() {
    return this.currencySymbol != null;
  }

  public void setCurrencySymbolIsSet(boolean value) {
    if (!value) {
      this.currencySymbol = null;
    }
  }

  /**
   * 
   * @see PaymentType
   */
  public PaymentType getPaymentType() {
    return this.paymentType;
  }

  /**
   * 
   * @see PaymentType
   */
  public void setPaymentType(PaymentType paymentType) {
    this.paymentType = paymentType;
  }

  public void unsetPaymentType() {
    this.paymentType = null;
  }

  /** Returns true if field paymentType is set (has been assigned a value) and false otherwise */
  public boolean isSetPaymentType() {
    return this.paymentType != null;
  }

  public void setPaymentTypeIsSet(boolean value) {
    if (!value) {
      this.paymentType = null;
    }
  }

  public long getCreateDate() {
    return this.createDate;
  }

  public void setCreateDate(long createDate) {
    this.createDate = createDate;
    setCreateDateIsSet(true);
  }

  public void unsetCreateDate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATEDATE_ISSET_ID);
  }

  /** Returns true if field createDate is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateDate() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATEDATE_ISSET_ID);
  }

  public void setCreateDateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATEDATE_ISSET_ID, value);
  }

  public boolean isOwnFlag() {
    return this.ownFlag;
  }

  public void setOwnFlag(boolean ownFlag) {
    this.ownFlag = ownFlag;
    setOwnFlagIsSet(true);
  }

  public void unsetOwnFlag() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __OWNFLAG_ISSET_ID);
  }

  /** Returns true if field ownFlag is set (has been assigned a value) and false otherwise */
  public boolean isSetOwnFlag() {
    return EncodingUtils.testBit(__isset_bitfield, __OWNFLAG_ISSET_ID);
  }

  public void setOwnFlagIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __OWNFLAG_ISSET_ID, value);
  }

  /**
   * 
   * @see ProductEventType
   */
  public ProductEventType getEventType() {
    return this.eventType;
  }

  /**
   * 
   * @see ProductEventType
   */
  public void setEventType(ProductEventType eventType) {
    this.eventType = eventType;
  }

  public void unsetEventType() {
    this.eventType = null;
  }

  /** Returns true if field eventType is set (has been assigned a value) and false otherwise */
  public boolean isSetEventType() {
    return this.eventType != null;
  }

  public void setEventTypeIsSet(boolean value) {
    if (!value) {
      this.eventType = null;
    }
  }

  public String getUrlSchema() {
    return this.urlSchema;
  }

  public void setUrlSchema(String urlSchema) {
    this.urlSchema = urlSchema;
  }

  public void unsetUrlSchema() {
    this.urlSchema = null;
  }

  /** Returns true if field urlSchema is set (has been assigned a value) and false otherwise */
  public boolean isSetUrlSchema() {
    return this.urlSchema != null;
  }

  public void setUrlSchemaIsSet(boolean value) {
    if (!value) {
      this.urlSchema = null;
    }
  }

  public String getDownloadUrl() {
    return this.downloadUrl;
  }

  public void setDownloadUrl(String downloadUrl) {
    this.downloadUrl = downloadUrl;
  }

  public void unsetDownloadUrl() {
    this.downloadUrl = null;
  }

  /** Returns true if field downloadUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetDownloadUrl() {
    return this.downloadUrl != null;
  }

  public void setDownloadUrlIsSet(boolean value) {
    if (!value) {
      this.downloadUrl = null;
    }
  }

  public String getBuddyMid() {
    return this.buddyMid;
  }

  public void setBuddyMid(String buddyMid) {
    this.buddyMid = buddyMid;
  }

  public void unsetBuddyMid() {
    this.buddyMid = null;
  }

  /** Returns true if field buddyMid is set (has been assigned a value) and false otherwise */
  public boolean isSetBuddyMid() {
    return this.buddyMid != null;
  }

  public void setBuddyMidIsSet(boolean value) {
    if (!value) {
      this.buddyMid = null;
    }
  }

  public long getPublishSince() {
    return this.publishSince;
  }

  public void setPublishSince(long publishSince) {
    this.publishSince = publishSince;
    setPublishSinceIsSet(true);
  }

  public void unsetPublishSince() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PUBLISHSINCE_ISSET_ID);
  }

  /** Returns true if field publishSince is set (has been assigned a value) and false otherwise */
  public boolean isSetPublishSince() {
    return EncodingUtils.testBit(__isset_bitfield, __PUBLISHSINCE_ISSET_ID);
  }

  public void setPublishSinceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PUBLISHSINCE_ISSET_ID, value);
  }

  public boolean isNewFlag() {
    return this.newFlag;
  }

  public void setNewFlag(boolean newFlag) {
    this.newFlag = newFlag;
    setNewFlagIsSet(true);
  }

  public void unsetNewFlag() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NEWFLAG_ISSET_ID);
  }

  /** Returns true if field newFlag is set (has been assigned a value) and false otherwise */
  public boolean isSetNewFlag() {
    return EncodingUtils.testBit(__isset_bitfield, __NEWFLAG_ISSET_ID);
  }

  public void setNewFlagIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NEWFLAG_ISSET_ID, value);
  }

  public boolean isMissionFlag() {
    return this.missionFlag;
  }

  public void setMissionFlag(boolean missionFlag) {
    this.missionFlag = missionFlag;
    setMissionFlagIsSet(true);
  }

  public void unsetMissionFlag() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MISSIONFLAG_ISSET_ID);
  }

  /** Returns true if field missionFlag is set (has been assigned a value) and false otherwise */
  public boolean isSetMissionFlag() {
    return EncodingUtils.testBit(__isset_bitfield, __MISSIONFLAG_ISSET_ID);
  }

  public void setMissionFlagIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MISSIONFLAG_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PRODUCT_ID:
      if (value == null) {
        unsetProductId();
      } else {
        setProductId((String)value);
      }
      break;

    case PACKAGE_ID:
      if (value == null) {
        unsetPackageId();
      } else {
        setPackageId((Long)value);
      }
      break;

    case VERSION:
      if (value == null) {
        unsetVersion();
      } else {
        setVersion((Integer)value);
      }
      break;

    case AUTHOR_NAME:
      if (value == null) {
        unsetAuthorName();
      } else {
        setAuthorName((String)value);
      }
      break;

    case ON_SALE:
      if (value == null) {
        unsetOnSale();
      } else {
        setOnSale((Boolean)value);
      }
      break;

    case VALID_DAYS:
      if (value == null) {
        unsetValidDays();
      } else {
        setValidDays((Integer)value);
      }
      break;

    case SALE_TYPE:
      if (value == null) {
        unsetSaleType();
      } else {
        setSaleType((Integer)value);
      }
      break;

    case COPYRIGHT:
      if (value == null) {
        unsetCopyright();
      } else {
        setCopyright((String)value);
      }
      break;

    case TITLE:
      if (value == null) {
        unsetTitle();
      } else {
        setTitle((String)value);
      }
      break;

    case DESCRIPTION_TEXT:
      if (value == null) {
        unsetDescriptionText();
      } else {
        setDescriptionText((String)value);
      }
      break;

    case SHOP_ORDER_ID:
      if (value == null) {
        unsetShopOrderId();
      } else {
        setShopOrderId((Long)value);
      }
      break;

    case FROM_MID:
      if (value == null) {
        unsetFromMid();
      } else {
        setFromMid((String)value);
      }
      break;

    case TO_MID:
      if (value == null) {
        unsetToMid();
      } else {
        setToMid((String)value);
      }
      break;

    case VALID_UNTIL:
      if (value == null) {
        unsetValidUntil();
      } else {
        setValidUntil((Long)value);
      }
      break;

    case PRICE_TIER:
      if (value == null) {
        unsetPriceTier();
      } else {
        setPriceTier((Integer)value);
      }
      break;

    case PRICE:
      if (value == null) {
        unsetPrice();
      } else {
        setPrice((String)value);
      }
      break;

    case CURRENCY:
      if (value == null) {
        unsetCurrency();
      } else {
        setCurrency((String)value);
      }
      break;

    case CURRENCY_SYMBOL:
      if (value == null) {
        unsetCurrencySymbol();
      } else {
        setCurrencySymbol((String)value);
      }
      break;

    case PAYMENT_TYPE:
      if (value == null) {
        unsetPaymentType();
      } else {
        setPaymentType((PaymentType)value);
      }
      break;

    case CREATE_DATE:
      if (value == null) {
        unsetCreateDate();
      } else {
        setCreateDate((Long)value);
      }
      break;

    case OWN_FLAG:
      if (value == null) {
        unsetOwnFlag();
      } else {
        setOwnFlag((Boolean)value);
      }
      break;

    case EVENT_TYPE:
      if (value == null) {
        unsetEventType();
      } else {
        setEventType((ProductEventType)value);
      }
      break;

    case URL_SCHEMA:
      if (value == null) {
        unsetUrlSchema();
      } else {
        setUrlSchema((String)value);
      }
      break;

    case DOWNLOAD_URL:
      if (value == null) {
        unsetDownloadUrl();
      } else {
        setDownloadUrl((String)value);
      }
      break;

    case BUDDY_MID:
      if (value == null) {
        unsetBuddyMid();
      } else {
        setBuddyMid((String)value);
      }
      break;

    case PUBLISH_SINCE:
      if (value == null) {
        unsetPublishSince();
      } else {
        setPublishSince((Long)value);
      }
      break;

    case NEW_FLAG:
      if (value == null) {
        unsetNewFlag();
      } else {
        setNewFlag((Boolean)value);
      }
      break;

    case MISSION_FLAG:
      if (value == null) {
        unsetMissionFlag();
      } else {
        setMissionFlag((Boolean)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PRODUCT_ID:
      return getProductId();

    case PACKAGE_ID:
      return getPackageId();

    case VERSION:
      return getVersion();

    case AUTHOR_NAME:
      return getAuthorName();

    case ON_SALE:
      return isOnSale();

    case VALID_DAYS:
      return getValidDays();

    case SALE_TYPE:
      return getSaleType();

    case COPYRIGHT:
      return getCopyright();

    case TITLE:
      return getTitle();

    case DESCRIPTION_TEXT:
      return getDescriptionText();

    case SHOP_ORDER_ID:
      return getShopOrderId();

    case FROM_MID:
      return getFromMid();

    case TO_MID:
      return getToMid();

    case VALID_UNTIL:
      return getValidUntil();

    case PRICE_TIER:
      return getPriceTier();

    case PRICE:
      return getPrice();

    case CURRENCY:
      return getCurrency();

    case CURRENCY_SYMBOL:
      return getCurrencySymbol();

    case PAYMENT_TYPE:
      return getPaymentType();

    case CREATE_DATE:
      return getCreateDate();

    case OWN_FLAG:
      return isOwnFlag();

    case EVENT_TYPE:
      return getEventType();

    case URL_SCHEMA:
      return getUrlSchema();

    case DOWNLOAD_URL:
      return getDownloadUrl();

    case BUDDY_MID:
      return getBuddyMid();

    case PUBLISH_SINCE:
      return getPublishSince();

    case NEW_FLAG:
      return isNewFlag();

    case MISSION_FLAG:
      return isMissionFlag();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PRODUCT_ID:
      return isSetProductId();
    case PACKAGE_ID:
      return isSetPackageId();
    case VERSION:
      return isSetVersion();
    case AUTHOR_NAME:
      return isSetAuthorName();
    case ON_SALE:
      return isSetOnSale();
    case VALID_DAYS:
      return isSetValidDays();
    case SALE_TYPE:
      return isSetSaleType();
    case COPYRIGHT:
      return isSetCopyright();
    case TITLE:
      return isSetTitle();
    case DESCRIPTION_TEXT:
      return isSetDescriptionText();
    case SHOP_ORDER_ID:
      return isSetShopOrderId();
    case FROM_MID:
      return isSetFromMid();
    case TO_MID:
      return isSetToMid();
    case VALID_UNTIL:
      return isSetValidUntil();
    case PRICE_TIER:
      return isSetPriceTier();
    case PRICE:
      return isSetPrice();
    case CURRENCY:
      return isSetCurrency();
    case CURRENCY_SYMBOL:
      return isSetCurrencySymbol();
    case PAYMENT_TYPE:
      return isSetPaymentType();
    case CREATE_DATE:
      return isSetCreateDate();
    case OWN_FLAG:
      return isSetOwnFlag();
    case EVENT_TYPE:
      return isSetEventType();
    case URL_SCHEMA:
      return isSetUrlSchema();
    case DOWNLOAD_URL:
      return isSetDownloadUrl();
    case BUDDY_MID:
      return isSetBuddyMid();
    case PUBLISH_SINCE:
      return isSetPublishSince();
    case NEW_FLAG:
      return isSetNewFlag();
    case MISSION_FLAG:
      return isSetMissionFlag();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Product)
      return this.equals((Product)that);
    return false;
  }

  public boolean equals(Product that) {
    if (that == null)
      return false;

    boolean this_present_productId = true && this.isSetProductId();
    boolean that_present_productId = true && that.isSetProductId();
    if (this_present_productId || that_present_productId) {
      if (!(this_present_productId && that_present_productId))
        return false;
      if (!this.productId.equals(that.productId))
        return false;
    }

    boolean this_present_packageId = true;
    boolean that_present_packageId = true;
    if (this_present_packageId || that_present_packageId) {
      if (!(this_present_packageId && that_present_packageId))
        return false;
      if (this.packageId != that.packageId)
        return false;
    }

    boolean this_present_version = true;
    boolean that_present_version = true;
    if (this_present_version || that_present_version) {
      if (!(this_present_version && that_present_version))
        return false;
      if (this.version != that.version)
        return false;
    }

    boolean this_present_authorName = true && this.isSetAuthorName();
    boolean that_present_authorName = true && that.isSetAuthorName();
    if (this_present_authorName || that_present_authorName) {
      if (!(this_present_authorName && that_present_authorName))
        return false;
      if (!this.authorName.equals(that.authorName))
        return false;
    }

    boolean this_present_onSale = true;
    boolean that_present_onSale = true;
    if (this_present_onSale || that_present_onSale) {
      if (!(this_present_onSale && that_present_onSale))
        return false;
      if (this.onSale != that.onSale)
        return false;
    }

    boolean this_present_validDays = true;
    boolean that_present_validDays = true;
    if (this_present_validDays || that_present_validDays) {
      if (!(this_present_validDays && that_present_validDays))
        return false;
      if (this.validDays != that.validDays)
        return false;
    }

    boolean this_present_saleType = true;
    boolean that_present_saleType = true;
    if (this_present_saleType || that_present_saleType) {
      if (!(this_present_saleType && that_present_saleType))
        return false;
      if (this.saleType != that.saleType)
        return false;
    }

    boolean this_present_copyright = true && this.isSetCopyright();
    boolean that_present_copyright = true && that.isSetCopyright();
    if (this_present_copyright || that_present_copyright) {
      if (!(this_present_copyright && that_present_copyright))
        return false;
      if (!this.copyright.equals(that.copyright))
        return false;
    }

    boolean this_present_title = true && this.isSetTitle();
    boolean that_present_title = true && that.isSetTitle();
    if (this_present_title || that_present_title) {
      if (!(this_present_title && that_present_title))
        return false;
      if (!this.title.equals(that.title))
        return false;
    }

    boolean this_present_descriptionText = true && this.isSetDescriptionText();
    boolean that_present_descriptionText = true && that.isSetDescriptionText();
    if (this_present_descriptionText || that_present_descriptionText) {
      if (!(this_present_descriptionText && that_present_descriptionText))
        return false;
      if (!this.descriptionText.equals(that.descriptionText))
        return false;
    }

    boolean this_present_shopOrderId = true;
    boolean that_present_shopOrderId = true;
    if (this_present_shopOrderId || that_present_shopOrderId) {
      if (!(this_present_shopOrderId && that_present_shopOrderId))
        return false;
      if (this.shopOrderId != that.shopOrderId)
        return false;
    }

    boolean this_present_fromMid = true && this.isSetFromMid();
    boolean that_present_fromMid = true && that.isSetFromMid();
    if (this_present_fromMid || that_present_fromMid) {
      if (!(this_present_fromMid && that_present_fromMid))
        return false;
      if (!this.fromMid.equals(that.fromMid))
        return false;
    }

    boolean this_present_toMid = true && this.isSetToMid();
    boolean that_present_toMid = true && that.isSetToMid();
    if (this_present_toMid || that_present_toMid) {
      if (!(this_present_toMid && that_present_toMid))
        return false;
      if (!this.toMid.equals(that.toMid))
        return false;
    }

    boolean this_present_validUntil = true;
    boolean that_present_validUntil = true;
    if (this_present_validUntil || that_present_validUntil) {
      if (!(this_present_validUntil && that_present_validUntil))
        return false;
      if (this.validUntil != that.validUntil)
        return false;
    }

    boolean this_present_priceTier = true;
    boolean that_present_priceTier = true;
    if (this_present_priceTier || that_present_priceTier) {
      if (!(this_present_priceTier && that_present_priceTier))
        return false;
      if (this.priceTier != that.priceTier)
        return false;
    }

    boolean this_present_price = true && this.isSetPrice();
    boolean that_present_price = true && that.isSetPrice();
    if (this_present_price || that_present_price) {
      if (!(this_present_price && that_present_price))
        return false;
      if (!this.price.equals(that.price))
        return false;
    }

    boolean this_present_currency = true && this.isSetCurrency();
    boolean that_present_currency = true && that.isSetCurrency();
    if (this_present_currency || that_present_currency) {
      if (!(this_present_currency && that_present_currency))
        return false;
      if (!this.currency.equals(that.currency))
        return false;
    }

    boolean this_present_currencySymbol = true && this.isSetCurrencySymbol();
    boolean that_present_currencySymbol = true && that.isSetCurrencySymbol();
    if (this_present_currencySymbol || that_present_currencySymbol) {
      if (!(this_present_currencySymbol && that_present_currencySymbol))
        return false;
      if (!this.currencySymbol.equals(that.currencySymbol))
        return false;
    }

    boolean this_present_paymentType = true && this.isSetPaymentType();
    boolean that_present_paymentType = true && that.isSetPaymentType();
    if (this_present_paymentType || that_present_paymentType) {
      if (!(this_present_paymentType && that_present_paymentType))
        return false;
      if (!this.paymentType.equals(that.paymentType))
        return false;
    }

    boolean this_present_createDate = true;
    boolean that_present_createDate = true;
    if (this_present_createDate || that_present_createDate) {
      if (!(this_present_createDate && that_present_createDate))
        return false;
      if (this.createDate != that.createDate)
        return false;
    }

    boolean this_present_ownFlag = true;
    boolean that_present_ownFlag = true;
    if (this_present_ownFlag || that_present_ownFlag) {
      if (!(this_present_ownFlag && that_present_ownFlag))
        return false;
      if (this.ownFlag != that.ownFlag)
        return false;
    }

    boolean this_present_eventType = true && this.isSetEventType();
    boolean that_present_eventType = true && that.isSetEventType();
    if (this_present_eventType || that_present_eventType) {
      if (!(this_present_eventType && that_present_eventType))
        return false;
      if (!this.eventType.equals(that.eventType))
        return false;
    }

    boolean this_present_urlSchema = true && this.isSetUrlSchema();
    boolean that_present_urlSchema = true && that.isSetUrlSchema();
    if (this_present_urlSchema || that_present_urlSchema) {
      if (!(this_present_urlSchema && that_present_urlSchema))
        return false;
      if (!this.urlSchema.equals(that.urlSchema))
        return false;
    }

    boolean this_present_downloadUrl = true && this.isSetDownloadUrl();
    boolean that_present_downloadUrl = true && that.isSetDownloadUrl();
    if (this_present_downloadUrl || that_present_downloadUrl) {
      if (!(this_present_downloadUrl && that_present_downloadUrl))
        return false;
      if (!this.downloadUrl.equals(that.downloadUrl))
        return false;
    }

    boolean this_present_buddyMid = true && this.isSetBuddyMid();
    boolean that_present_buddyMid = true && that.isSetBuddyMid();
    if (this_present_buddyMid || that_present_buddyMid) {
      if (!(this_present_buddyMid && that_present_buddyMid))
        return false;
      if (!this.buddyMid.equals(that.buddyMid))
        return false;
    }

    boolean this_present_publishSince = true;
    boolean that_present_publishSince = true;
    if (this_present_publishSince || that_present_publishSince) {
      if (!(this_present_publishSince && that_present_publishSince))
        return false;
      if (this.publishSince != that.publishSince)
        return false;
    }

    boolean this_present_newFlag = true;
    boolean that_present_newFlag = true;
    if (this_present_newFlag || that_present_newFlag) {
      if (!(this_present_newFlag && that_present_newFlag))
        return false;
      if (this.newFlag != that.newFlag)
        return false;
    }

    boolean this_present_missionFlag = true;
    boolean that_present_missionFlag = true;
    if (this_present_missionFlag || that_present_missionFlag) {
      if (!(this_present_missionFlag && that_present_missionFlag))
        return false;
      if (this.missionFlag != that.missionFlag)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_productId = true && (isSetProductId());
    list.add(present_productId);
    if (present_productId)
      list.add(productId);

    boolean present_packageId = true;
    list.add(present_packageId);
    if (present_packageId)
      list.add(packageId);

    boolean present_version = true;
    list.add(present_version);
    if (present_version)
      list.add(version);

    boolean present_authorName = true && (isSetAuthorName());
    list.add(present_authorName);
    if (present_authorName)
      list.add(authorName);

    boolean present_onSale = true;
    list.add(present_onSale);
    if (present_onSale)
      list.add(onSale);

    boolean present_validDays = true;
    list.add(present_validDays);
    if (present_validDays)
      list.add(validDays);

    boolean present_saleType = true;
    list.add(present_saleType);
    if (present_saleType)
      list.add(saleType);

    boolean present_copyright = true && (isSetCopyright());
    list.add(present_copyright);
    if (present_copyright)
      list.add(copyright);

    boolean present_title = true && (isSetTitle());
    list.add(present_title);
    if (present_title)
      list.add(title);

    boolean present_descriptionText = true && (isSetDescriptionText());
    list.add(present_descriptionText);
    if (present_descriptionText)
      list.add(descriptionText);

    boolean present_shopOrderId = true;
    list.add(present_shopOrderId);
    if (present_shopOrderId)
      list.add(shopOrderId);

    boolean present_fromMid = true && (isSetFromMid());
    list.add(present_fromMid);
    if (present_fromMid)
      list.add(fromMid);

    boolean present_toMid = true && (isSetToMid());
    list.add(present_toMid);
    if (present_toMid)
      list.add(toMid);

    boolean present_validUntil = true;
    list.add(present_validUntil);
    if (present_validUntil)
      list.add(validUntil);

    boolean present_priceTier = true;
    list.add(present_priceTier);
    if (present_priceTier)
      list.add(priceTier);

    boolean present_price = true && (isSetPrice());
    list.add(present_price);
    if (present_price)
      list.add(price);

    boolean present_currency = true && (isSetCurrency());
    list.add(present_currency);
    if (present_currency)
      list.add(currency);

    boolean present_currencySymbol = true && (isSetCurrencySymbol());
    list.add(present_currencySymbol);
    if (present_currencySymbol)
      list.add(currencySymbol);

    boolean present_paymentType = true && (isSetPaymentType());
    list.add(present_paymentType);
    if (present_paymentType)
      list.add(paymentType.getValue());

    boolean present_createDate = true;
    list.add(present_createDate);
    if (present_createDate)
      list.add(createDate);

    boolean present_ownFlag = true;
    list.add(present_ownFlag);
    if (present_ownFlag)
      list.add(ownFlag);

    boolean present_eventType = true && (isSetEventType());
    list.add(present_eventType);
    if (present_eventType)
      list.add(eventType.getValue());

    boolean present_urlSchema = true && (isSetUrlSchema());
    list.add(present_urlSchema);
    if (present_urlSchema)
      list.add(urlSchema);

    boolean present_downloadUrl = true && (isSetDownloadUrl());
    list.add(present_downloadUrl);
    if (present_downloadUrl)
      list.add(downloadUrl);

    boolean present_buddyMid = true && (isSetBuddyMid());
    list.add(present_buddyMid);
    if (present_buddyMid)
      list.add(buddyMid);

    boolean present_publishSince = true;
    list.add(present_publishSince);
    if (present_publishSince)
      list.add(publishSince);

    boolean present_newFlag = true;
    list.add(present_newFlag);
    if (present_newFlag)
      list.add(newFlag);

    boolean present_missionFlag = true;
    list.add(present_missionFlag);
    if (present_missionFlag)
      list.add(missionFlag);

    return list.hashCode();
  }

  @Override
  public int compareTo(Product other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetProductId()).compareTo(other.isSetProductId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productId, other.productId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPackageId()).compareTo(other.isSetPackageId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPackageId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.packageId, other.packageId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVersion()).compareTo(other.isSetVersion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVersion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.version, other.version);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuthorName()).compareTo(other.isSetAuthorName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuthorName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.authorName, other.authorName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOnSale()).compareTo(other.isSetOnSale());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOnSale()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.onSale, other.onSale);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValidDays()).compareTo(other.isSetValidDays());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValidDays()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.validDays, other.validDays);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSaleType()).compareTo(other.isSetSaleType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSaleType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.saleType, other.saleType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCopyright()).compareTo(other.isSetCopyright());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCopyright()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.copyright, other.copyright);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTitle()).compareTo(other.isSetTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.title, other.title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDescriptionText()).compareTo(other.isSetDescriptionText());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescriptionText()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.descriptionText, other.descriptionText);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShopOrderId()).compareTo(other.isSetShopOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShopOrderId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.shopOrderId, other.shopOrderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFromMid()).compareTo(other.isSetFromMid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFromMid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fromMid, other.fromMid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetToMid()).compareTo(other.isSetToMid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetToMid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.toMid, other.toMid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValidUntil()).compareTo(other.isSetValidUntil());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValidUntil()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.validUntil, other.validUntil);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPriceTier()).compareTo(other.isSetPriceTier());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPriceTier()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.priceTier, other.priceTier);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPrice()).compareTo(other.isSetPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.price, other.price);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCurrency()).compareTo(other.isSetCurrency());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurrency()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.currency, other.currency);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCurrencySymbol()).compareTo(other.isSetCurrencySymbol());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurrencySymbol()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.currencySymbol, other.currencySymbol);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaymentType()).compareTo(other.isSetPaymentType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaymentType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paymentType, other.paymentType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateDate()).compareTo(other.isSetCreateDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createDate, other.createDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOwnFlag()).compareTo(other.isSetOwnFlag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOwnFlag()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ownFlag, other.ownFlag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEventType()).compareTo(other.isSetEventType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEventType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.eventType, other.eventType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUrlSchema()).compareTo(other.isSetUrlSchema());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUrlSchema()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.urlSchema, other.urlSchema);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDownloadUrl()).compareTo(other.isSetDownloadUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDownloadUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.downloadUrl, other.downloadUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBuddyMid()).compareTo(other.isSetBuddyMid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuddyMid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.buddyMid, other.buddyMid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPublishSince()).compareTo(other.isSetPublishSince());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPublishSince()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.publishSince, other.publishSince);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNewFlag()).compareTo(other.isSetNewFlag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNewFlag()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.newFlag, other.newFlag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMissionFlag()).compareTo(other.isSetMissionFlag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMissionFlag()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.missionFlag, other.missionFlag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Product(");
    boolean first = true;

    sb.append("productId:");
    if (this.productId == null) {
      sb.append("null");
    } else {
      sb.append(this.productId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("packageId:");
    sb.append(this.packageId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("version:");
    sb.append(this.version);
    first = false;
    if (!first) sb.append(", ");
    sb.append("authorName:");
    if (this.authorName == null) {
      sb.append("null");
    } else {
      sb.append(this.authorName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("onSale:");
    sb.append(this.onSale);
    first = false;
    if (!first) sb.append(", ");
    sb.append("validDays:");
    sb.append(this.validDays);
    first = false;
    if (!first) sb.append(", ");
    sb.append("saleType:");
    sb.append(this.saleType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("copyright:");
    if (this.copyright == null) {
      sb.append("null");
    } else {
      sb.append(this.copyright);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("title:");
    if (this.title == null) {
      sb.append("null");
    } else {
      sb.append(this.title);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("descriptionText:");
    if (this.descriptionText == null) {
      sb.append("null");
    } else {
      sb.append(this.descriptionText);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("shopOrderId:");
    sb.append(this.shopOrderId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("fromMid:");
    if (this.fromMid == null) {
      sb.append("null");
    } else {
      sb.append(this.fromMid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("toMid:");
    if (this.toMid == null) {
      sb.append("null");
    } else {
      sb.append(this.toMid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("validUntil:");
    sb.append(this.validUntil);
    first = false;
    if (!first) sb.append(", ");
    sb.append("priceTier:");
    sb.append(this.priceTier);
    first = false;
    if (!first) sb.append(", ");
    sb.append("price:");
    if (this.price == null) {
      sb.append("null");
    } else {
      sb.append(this.price);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("currency:");
    if (this.currency == null) {
      sb.append("null");
    } else {
      sb.append(this.currency);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("currencySymbol:");
    if (this.currencySymbol == null) {
      sb.append("null");
    } else {
      sb.append(this.currencySymbol);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("paymentType:");
    if (this.paymentType == null) {
      sb.append("null");
    } else {
      sb.append(this.paymentType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createDate:");
    sb.append(this.createDate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("ownFlag:");
    sb.append(this.ownFlag);
    first = false;
    if (!first) sb.append(", ");
    sb.append("eventType:");
    if (this.eventType == null) {
      sb.append("null");
    } else {
      sb.append(this.eventType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("urlSchema:");
    if (this.urlSchema == null) {
      sb.append("null");
    } else {
      sb.append(this.urlSchema);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("downloadUrl:");
    if (this.downloadUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.downloadUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("buddyMid:");
    if (this.buddyMid == null) {
      sb.append("null");
    } else {
      sb.append(this.buddyMid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("publishSince:");
    sb.append(this.publishSince);
    first = false;
    if (!first) sb.append(", ");
    sb.append("newFlag:");
    sb.append(this.newFlag);
    first = false;
    if (!first) sb.append(", ");
    sb.append("missionFlag:");
    sb.append(this.missionFlag);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ProductStandardSchemeFactory implements SchemeFactory {
    public ProductStandardScheme getScheme() {
      return new ProductStandardScheme();
    }
  }

  private static class ProductStandardScheme extends StandardScheme<Product> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Product struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PRODUCT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productId = iprot.readString();
              struct.setProductIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PACKAGE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.packageId = iprot.readI64();
              struct.setPackageIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.version = iprot.readI32();
              struct.setVersionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // AUTHOR_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.authorName = iprot.readString();
              struct.setAuthorNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ON_SALE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.onSale = iprot.readBool();
              struct.setOnSaleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // VALID_DAYS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.validDays = iprot.readI32();
              struct.setValidDaysIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // SALE_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.saleType = iprot.readI32();
              struct.setSaleTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // COPYRIGHT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.copyright = iprot.readString();
              struct.setCopyrightIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.title = iprot.readString();
              struct.setTitleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // DESCRIPTION_TEXT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.descriptionText = iprot.readString();
              struct.setDescriptionTextIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // SHOP_ORDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.shopOrderId = iprot.readI64();
              struct.setShopOrderIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // FROM_MID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fromMid = iprot.readString();
              struct.setFromMidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // TO_MID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.toMid = iprot.readString();
              struct.setToMidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // VALID_UNTIL
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.validUntil = iprot.readI64();
              struct.setValidUntilIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // PRICE_TIER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.priceTier = iprot.readI32();
              struct.setPriceTierIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.price = iprot.readString();
              struct.setPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // CURRENCY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.currency = iprot.readString();
              struct.setCurrencyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // CURRENCY_SYMBOL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.currencySymbol = iprot.readString();
              struct.setCurrencySymbolIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // PAYMENT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.paymentType = com.linecorp.thrift.PaymentType.findByValue(iprot.readI32());
              struct.setPaymentTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // CREATE_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createDate = iprot.readI64();
              struct.setCreateDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // OWN_FLAG
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.ownFlag = iprot.readBool();
              struct.setOwnFlagIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // EVENT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.eventType = com.linecorp.thrift.ProductEventType.findByValue(iprot.readI32());
              struct.setEventTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // URL_SCHEMA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.urlSchema = iprot.readString();
              struct.setUrlSchemaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // DOWNLOAD_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.downloadUrl = iprot.readString();
              struct.setDownloadUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // BUDDY_MID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.buddyMid = iprot.readString();
              struct.setBuddyMidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // PUBLISH_SINCE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.publishSince = iprot.readI64();
              struct.setPublishSinceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // NEW_FLAG
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.newFlag = iprot.readBool();
              struct.setNewFlagIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // MISSION_FLAG
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.missionFlag = iprot.readBool();
              struct.setMissionFlagIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Product struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.productId != null) {
        oprot.writeFieldBegin(PRODUCT_ID_FIELD_DESC);
        oprot.writeString(struct.productId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PACKAGE_ID_FIELD_DESC);
      oprot.writeI64(struct.packageId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VERSION_FIELD_DESC);
      oprot.writeI32(struct.version);
      oprot.writeFieldEnd();
      if (struct.authorName != null) {
        oprot.writeFieldBegin(AUTHOR_NAME_FIELD_DESC);
        oprot.writeString(struct.authorName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ON_SALE_FIELD_DESC);
      oprot.writeBool(struct.onSale);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VALID_DAYS_FIELD_DESC);
      oprot.writeI32(struct.validDays);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SALE_TYPE_FIELD_DESC);
      oprot.writeI32(struct.saleType);
      oprot.writeFieldEnd();
      if (struct.copyright != null) {
        oprot.writeFieldBegin(COPYRIGHT_FIELD_DESC);
        oprot.writeString(struct.copyright);
        oprot.writeFieldEnd();
      }
      if (struct.title != null) {
        oprot.writeFieldBegin(TITLE_FIELD_DESC);
        oprot.writeString(struct.title);
        oprot.writeFieldEnd();
      }
      if (struct.descriptionText != null) {
        oprot.writeFieldBegin(DESCRIPTION_TEXT_FIELD_DESC);
        oprot.writeString(struct.descriptionText);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(SHOP_ORDER_ID_FIELD_DESC);
      oprot.writeI64(struct.shopOrderId);
      oprot.writeFieldEnd();
      if (struct.fromMid != null) {
        oprot.writeFieldBegin(FROM_MID_FIELD_DESC);
        oprot.writeString(struct.fromMid);
        oprot.writeFieldEnd();
      }
      if (struct.toMid != null) {
        oprot.writeFieldBegin(TO_MID_FIELD_DESC);
        oprot.writeString(struct.toMid);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(VALID_UNTIL_FIELD_DESC);
      oprot.writeI64(struct.validUntil);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PRICE_TIER_FIELD_DESC);
      oprot.writeI32(struct.priceTier);
      oprot.writeFieldEnd();
      if (struct.price != null) {
        oprot.writeFieldBegin(PRICE_FIELD_DESC);
        oprot.writeString(struct.price);
        oprot.writeFieldEnd();
      }
      if (struct.currency != null) {
        oprot.writeFieldBegin(CURRENCY_FIELD_DESC);
        oprot.writeString(struct.currency);
        oprot.writeFieldEnd();
      }
      if (struct.currencySymbol != null) {
        oprot.writeFieldBegin(CURRENCY_SYMBOL_FIELD_DESC);
        oprot.writeString(struct.currencySymbol);
        oprot.writeFieldEnd();
      }
      if (struct.paymentType != null) {
        oprot.writeFieldBegin(PAYMENT_TYPE_FIELD_DESC);
        oprot.writeI32(struct.paymentType.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATE_DATE_FIELD_DESC);
      oprot.writeI64(struct.createDate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(OWN_FLAG_FIELD_DESC);
      oprot.writeBool(struct.ownFlag);
      oprot.writeFieldEnd();
      if (struct.eventType != null) {
        oprot.writeFieldBegin(EVENT_TYPE_FIELD_DESC);
        oprot.writeI32(struct.eventType.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.urlSchema != null) {
        oprot.writeFieldBegin(URL_SCHEMA_FIELD_DESC);
        oprot.writeString(struct.urlSchema);
        oprot.writeFieldEnd();
      }
      if (struct.downloadUrl != null) {
        oprot.writeFieldBegin(DOWNLOAD_URL_FIELD_DESC);
        oprot.writeString(struct.downloadUrl);
        oprot.writeFieldEnd();
      }
      if (struct.buddyMid != null) {
        oprot.writeFieldBegin(BUDDY_MID_FIELD_DESC);
        oprot.writeString(struct.buddyMid);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PUBLISH_SINCE_FIELD_DESC);
      oprot.writeI64(struct.publishSince);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NEW_FLAG_FIELD_DESC);
      oprot.writeBool(struct.newFlag);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MISSION_FLAG_FIELD_DESC);
      oprot.writeBool(struct.missionFlag);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ProductTupleSchemeFactory implements SchemeFactory {
    public ProductTupleScheme getScheme() {
      return new ProductTupleScheme();
    }
  }

  private static class ProductTupleScheme extends TupleScheme<Product> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Product struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetProductId()) {
        optionals.set(0);
      }
      if (struct.isSetPackageId()) {
        optionals.set(1);
      }
      if (struct.isSetVersion()) {
        optionals.set(2);
      }
      if (struct.isSetAuthorName()) {
        optionals.set(3);
      }
      if (struct.isSetOnSale()) {
        optionals.set(4);
      }
      if (struct.isSetValidDays()) {
        optionals.set(5);
      }
      if (struct.isSetSaleType()) {
        optionals.set(6);
      }
      if (struct.isSetCopyright()) {
        optionals.set(7);
      }
      if (struct.isSetTitle()) {
        optionals.set(8);
      }
      if (struct.isSetDescriptionText()) {
        optionals.set(9);
      }
      if (struct.isSetShopOrderId()) {
        optionals.set(10);
      }
      if (struct.isSetFromMid()) {
        optionals.set(11);
      }
      if (struct.isSetToMid()) {
        optionals.set(12);
      }
      if (struct.isSetValidUntil()) {
        optionals.set(13);
      }
      if (struct.isSetPriceTier()) {
        optionals.set(14);
      }
      if (struct.isSetPrice()) {
        optionals.set(15);
      }
      if (struct.isSetCurrency()) {
        optionals.set(16);
      }
      if (struct.isSetCurrencySymbol()) {
        optionals.set(17);
      }
      if (struct.isSetPaymentType()) {
        optionals.set(18);
      }
      if (struct.isSetCreateDate()) {
        optionals.set(19);
      }
      if (struct.isSetOwnFlag()) {
        optionals.set(20);
      }
      if (struct.isSetEventType()) {
        optionals.set(21);
      }
      if (struct.isSetUrlSchema()) {
        optionals.set(22);
      }
      if (struct.isSetDownloadUrl()) {
        optionals.set(23);
      }
      if (struct.isSetBuddyMid()) {
        optionals.set(24);
      }
      if (struct.isSetPublishSince()) {
        optionals.set(25);
      }
      if (struct.isSetNewFlag()) {
        optionals.set(26);
      }
      if (struct.isSetMissionFlag()) {
        optionals.set(27);
      }
      oprot.writeBitSet(optionals, 28);
      if (struct.isSetProductId()) {
        oprot.writeString(struct.productId);
      }
      if (struct.isSetPackageId()) {
        oprot.writeI64(struct.packageId);
      }
      if (struct.isSetVersion()) {
        oprot.writeI32(struct.version);
      }
      if (struct.isSetAuthorName()) {
        oprot.writeString(struct.authorName);
      }
      if (struct.isSetOnSale()) {
        oprot.writeBool(struct.onSale);
      }
      if (struct.isSetValidDays()) {
        oprot.writeI32(struct.validDays);
      }
      if (struct.isSetSaleType()) {
        oprot.writeI32(struct.saleType);
      }
      if (struct.isSetCopyright()) {
        oprot.writeString(struct.copyright);
      }
      if (struct.isSetTitle()) {
        oprot.writeString(struct.title);
      }
      if (struct.isSetDescriptionText()) {
        oprot.writeString(struct.descriptionText);
      }
      if (struct.isSetShopOrderId()) {
        oprot.writeI64(struct.shopOrderId);
      }
      if (struct.isSetFromMid()) {
        oprot.writeString(struct.fromMid);
      }
      if (struct.isSetToMid()) {
        oprot.writeString(struct.toMid);
      }
      if (struct.isSetValidUntil()) {
        oprot.writeI64(struct.validUntil);
      }
      if (struct.isSetPriceTier()) {
        oprot.writeI32(struct.priceTier);
      }
      if (struct.isSetPrice()) {
        oprot.writeString(struct.price);
      }
      if (struct.isSetCurrency()) {
        oprot.writeString(struct.currency);
      }
      if (struct.isSetCurrencySymbol()) {
        oprot.writeString(struct.currencySymbol);
      }
      if (struct.isSetPaymentType()) {
        oprot.writeI32(struct.paymentType.getValue());
      }
      if (struct.isSetCreateDate()) {
        oprot.writeI64(struct.createDate);
      }
      if (struct.isSetOwnFlag()) {
        oprot.writeBool(struct.ownFlag);
      }
      if (struct.isSetEventType()) {
        oprot.writeI32(struct.eventType.getValue());
      }
      if (struct.isSetUrlSchema()) {
        oprot.writeString(struct.urlSchema);
      }
      if (struct.isSetDownloadUrl()) {
        oprot.writeString(struct.downloadUrl);
      }
      if (struct.isSetBuddyMid()) {
        oprot.writeString(struct.buddyMid);
      }
      if (struct.isSetPublishSince()) {
        oprot.writeI64(struct.publishSince);
      }
      if (struct.isSetNewFlag()) {
        oprot.writeBool(struct.newFlag);
      }
      if (struct.isSetMissionFlag()) {
        oprot.writeBool(struct.missionFlag);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Product struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(28);
      if (incoming.get(0)) {
        struct.productId = iprot.readString();
        struct.setProductIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.packageId = iprot.readI64();
        struct.setPackageIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.version = iprot.readI32();
        struct.setVersionIsSet(true);
      }
      if (incoming.get(3)) {
        struct.authorName = iprot.readString();
        struct.setAuthorNameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.onSale = iprot.readBool();
        struct.setOnSaleIsSet(true);
      }
      if (incoming.get(5)) {
        struct.validDays = iprot.readI32();
        struct.setValidDaysIsSet(true);
      }
      if (incoming.get(6)) {
        struct.saleType = iprot.readI32();
        struct.setSaleTypeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.copyright = iprot.readString();
        struct.setCopyrightIsSet(true);
      }
      if (incoming.get(8)) {
        struct.title = iprot.readString();
        struct.setTitleIsSet(true);
      }
      if (incoming.get(9)) {
        struct.descriptionText = iprot.readString();
        struct.setDescriptionTextIsSet(true);
      }
      if (incoming.get(10)) {
        struct.shopOrderId = iprot.readI64();
        struct.setShopOrderIdIsSet(true);
      }
      if (incoming.get(11)) {
        struct.fromMid = iprot.readString();
        struct.setFromMidIsSet(true);
      }
      if (incoming.get(12)) {
        struct.toMid = iprot.readString();
        struct.setToMidIsSet(true);
      }
      if (incoming.get(13)) {
        struct.validUntil = iprot.readI64();
        struct.setValidUntilIsSet(true);
      }
      if (incoming.get(14)) {
        struct.priceTier = iprot.readI32();
        struct.setPriceTierIsSet(true);
      }
      if (incoming.get(15)) {
        struct.price = iprot.readString();
        struct.setPriceIsSet(true);
      }
      if (incoming.get(16)) {
        struct.currency = iprot.readString();
        struct.setCurrencyIsSet(true);
      }
      if (incoming.get(17)) {
        struct.currencySymbol = iprot.readString();
        struct.setCurrencySymbolIsSet(true);
      }
      if (incoming.get(18)) {
        struct.paymentType = com.linecorp.thrift.PaymentType.findByValue(iprot.readI32());
        struct.setPaymentTypeIsSet(true);
      }
      if (incoming.get(19)) {
        struct.createDate = iprot.readI64();
        struct.setCreateDateIsSet(true);
      }
      if (incoming.get(20)) {
        struct.ownFlag = iprot.readBool();
        struct.setOwnFlagIsSet(true);
      }
      if (incoming.get(21)) {
        struct.eventType = com.linecorp.thrift.ProductEventType.findByValue(iprot.readI32());
        struct.setEventTypeIsSet(true);
      }
      if (incoming.get(22)) {
        struct.urlSchema = iprot.readString();
        struct.setUrlSchemaIsSet(true);
      }
      if (incoming.get(23)) {
        struct.downloadUrl = iprot.readString();
        struct.setDownloadUrlIsSet(true);
      }
      if (incoming.get(24)) {
        struct.buddyMid = iprot.readString();
        struct.setBuddyMidIsSet(true);
      }
      if (incoming.get(25)) {
        struct.publishSince = iprot.readI64();
        struct.setPublishSinceIsSet(true);
      }
      if (incoming.get(26)) {
        struct.newFlag = iprot.readBool();
        struct.setNewFlagIsSet(true);
      }
      if (incoming.get(27)) {
        struct.missionFlag = iprot.readBool();
        struct.setMissionFlagIsSet(true);
      }
    }
  }

}

